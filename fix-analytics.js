#!/usr/bin/env node
/**
 * üîß –§–∏–∫—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: –∑–∞–º–µ–Ω—è–µ—Ç trackEvent –Ω–∞ window.analytics.trackEvent
 * –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –æ—à–∏–±–∫–∏ "trackEvent is not defined"
 */

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const filesToFix = [
    'C:\\Users\\konfu\\Desktop\\–ö—Ä–æ–ª–∏–∫–∏\\scripts\\contacts.js',
    'C:\\Users\\konfu\\Desktop\\–ö—Ä–æ–ª–∏–∫–∏\\scripts\\consultant.js',
    'C:\\Users\\konfu\\Desktop\\–ö—Ä–æ–ª–∏–∫–∏\\scripts\\advanced-features.js',
    'C:\\Users\\konfu\\Desktop\\–ö—Ä–æ–ª–∏–∫–∏\\scripts\\social-integration.js',
    'C:\\Users\\konfu\\Desktop\\–ö—Ä–æ–ª–∏–∫–∏\\scripts\\final-tasks.js'
];

function fixAnalyticsInFile(filePath) {
    try {
        let content = fs.readFileSync(filePath, 'utf8');
        let modified = false;

        // –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è typeof trackEvent –Ω–∞ window.analytics
        const patterns = [
            {
                from: /typeof trackEvent === 'function'/g,
                to: "window.analytics && typeof window.analytics.trackEvent === 'function'"
            },
            {
                from: /trackEvent\(/g,
                to: "window.analytics.trackEvent("
            }
        ];

        patterns.forEach(pattern => {
            if (pattern.from.test(content)) {
                content = content.replace(pattern.from, pattern.to);
                modified = true;
            }
        });

        if (modified) {
            fs.writeFileSync(filePath, content, 'utf8');
            console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${path.basename(filePath)}`);
            return true;
        } else {
            console.log(`‚ö™ –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: ${path.basename(filePath)}`);
            return false;
        }
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${path.basename(filePath)}:`, error.message);
        return false;
    }
}

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ JavaScript —Ñ–∞–π–ª–∞—Ö...\n');

let fixedCount = 0;
filesToFix.forEach(file => {
    if (fixAnalyticsInFile(file)) {
        fixedCount++;
    }
});

console.log(`\n‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${fixedCount}/${filesToFix.length}`);

if (fixedCount > 0) {
    console.log('\nüéØ –¢–µ–ø–µ—Ä—å –≤—Å–µ –≤—ã–∑–æ–≤—ã trackEvent –∏—Å–ø–æ–ª—å–∑—É—é—Ç window.analytics.trackEvent');
    console.log('üöÄ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');
}