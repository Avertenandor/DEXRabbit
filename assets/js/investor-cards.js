/**
 * DEXRabbit Investor Cards Interactive Functions
 * –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
 * Version: 1.0.0
 */

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function () {
  initInvestorPhotoModals();
  initInvestorCardAnimations();
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–ª—è —Ñ–æ—Ç–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
 */
function initInvestorPhotoModals() {
  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
  if (!document.getElementById('investorPhotoModal')) {
    const modalHTML = `
            <div id="investorPhotoModal" class="investor-photo-modal">
                <span class="investor-photo-modal-close">&times;</span>
                <div class="investor-photo-modal-content">
                    <img id="investorModalImage" src="" alt="">
                    <div class="investor-modal-info">
                        <h3 class="investor-modal-name"></h3>
                        <a class="investor-modal-telegram" href="" target="_blank"></a>
                        <div class="investor-modal-stats"></div>
                    </div>
                </div>
            </div>
        `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
  }

  const modal = document.getElementById('investorPhotoModal');
  const modalImg = document.getElementById('investorModalImage');
  const modalName = modal.querySelector('.investor-modal-name');
  const modalTelegram = modal.querySelector('.investor-modal-telegram');
  const modalStats = modal.querySelector('.investor-modal-stats');
  const closeBtn = modal.querySelector('.investor-photo-modal-close');

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
  const investorAvatars = document.querySelectorAll('.investor-avatar, .avatar');

  investorAvatars.forEach(avatar => {
    avatar.style.cursor = 'pointer';

    avatar.addEventListener('click', function (e) {
      e.preventDefault();

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
      const card = this.closest('.investor-card, .card');
      if (!card) return;

      const img = this.querySelector('img');
      if (!img || !img.src) return;

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–≤–µ—Å—Ç–æ—Ä–µ
      const name =
        card.querySelector('h4')?.textContent ||
        card.querySelector('.investor-name')?.textContent ||
        '–ò–Ω–≤–µ—Å—Ç–æ—Ä';

      const telegramLink = card.querySelector('a[href*="t.me"]');
      const telegram = telegramLink?.textContent || '';
      const telegramHref = telegramLink?.href || '#';

      const rabbits =
        card.querySelector('.investor-rabbits')?.textContent ||
        card.querySelector('p[style*="margin-top: 0.5rem"]')?.textContent ||
        '';

      const status =
        card.querySelector('.investor-status')?.textContent ||
        card.querySelector('p[style*="opacity: 0.7"]')?.textContent ||
        '';

      // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      modalImg.src = img.src;
      modalImg.alt = name;
      modalName.textContent = name;
      modalTelegram.textContent = telegram;
      modalTelegram.href = telegramHref;
      modalStats.innerHTML = `
                ${rabbits ? `<div>${rabbits}</div>` : ''}
                ${status ? `<div style="opacity: 0.8; margin-top: 0.5rem;">${status}</div>` : ''}
            `;

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';

      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
      setTimeout(() => {
        modal.style.opacity = '1';
      }, 10);
    });
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
  if (closeBtn) {
    closeBtn.addEventListener('click', closeModal);
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
  modal.addEventListener('click', function (e) {
    if (e.target === this) {
      closeModal();
    }
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ Escape
  document.addEventListener('keydown', function (e) {
    if (e.key === 'Escape' && modal.classList.contains('active')) {
      closeModal();
    }
  });

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  function closeModal() {
    modal.style.opacity = '0';
    setTimeout(() => {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }, 300);
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
 */
function initInvestorCardAnimations() {
  const cards = document.querySelectorAll('.investor-card');

  cards.forEach((card, index) => {
    // –î–µ–ª–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
    card.style.opacity = '0';
    card.style.transform = 'translateY(10px)';

    setTimeout(() => {
      card.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
      card.style.opacity = '1';
      card.style.transform = 'translateY(0)';
    }, index * 50);
  });
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
 * @param {Object} investor - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
 * @returns {String} HTML –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
 */
function createInvestorCard(investor) {
  const {
    name,
    telegram,
    telegramUrl,
    photo,
    rabbits,
    status,
    isVip = false,
    isNew = false,
  } = investor;

  const vipBadge = isVip ? '<div class="investor-vip-badge">VIP</div>' : '';
  const newClass = isNew ? 'new' : '';

  return `
        <div class="investor-card ${newClass}">
            ${vipBadge}
            <div class="investor-avatar">
                <div class="investor-avatar-wrapper">
                    <img src="${photo}" alt="${name}" 
                         onerror="this.style.opacity='0';"
                         onload="this.style.opacity='1'; this.parentElement.style.background='none';">
                </div>
            </div>
            <h4 class="investor-name">${name}</h4>
            <a href="${telegramUrl}" target="_blank" class="investor-telegram">${telegram}</a>
            <div class="investor-stats">
                <p class="investor-rabbits">üê∞ ${rabbits} –∫—Ä–æ–ª–∏–∫–æ–≤</p>
                <p class="investor-status">${status}</p>
            </div>
            <div class="investor-actions">
                <a href="${telegramUrl}" target="_blank" class="investor-action-btn">
                    üí¨ –°–≤—è–∑–∞—Ç—å—Å—è
                </a>
                <a href="${telegramUrl}" target="_blank" class="investor-action-btn secondary">
                    ‚ùì –í–æ–ø—Ä–æ—Å
                </a>
            </div>
        </div>
    `;
}

/**
 * –°–ø–∏—Å–æ–∫ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
 */
const dexRabbitInvestors = [
  {
    name: '–ù–∞—Ç–∞–ª—å—è',
    telegram: '@natder',
    telegramUrl: 'https://t.me/natder',
    photo: '/assets/img/avatars/natder.jpg',
    rabbits: 14,
    status: '–ò–Ω–≤–µ—Å—Ç–æ—Ä –ø–µ—Ä–≤–æ–π –≤–æ–ª–Ω—ã',
    isVip: true,
  },
  {
    name: '–í–ª–∞–¥',
    telegram: '@ded_vtapkax',
    telegramUrl: 'https://t.me/ded_vtapkax',
    photo: '/assets/img/avatars/vlad.png?v=20250929-vlad',
    rabbits: 14,
    status: '–û–ø—ã—Ç–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä',
    isVip: true,
  },
  {
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
    telegram: '@AlexGenom8515',
    telegramUrl: 'https://t.me/AlexGenom8515',
    photo: '/assets/img/avatars/alexander.jpg?v=20250929-final',
    rabbits: 14,
    status: '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω–≤–µ—Å—Ç–æ—Ä',
    isVip: true,
  },
];

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ –≤—Å–µ—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
 * @param {String} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
 */
function renderInvestorsGrid(containerId) {
  const container = document.getElementById(containerId);
  if (!container) return;

  const investorsHTML = dexRabbitInvestors.map(investor => createInvestorCard(investor)).join('');

  container.innerHTML = `
        <div class="investors-grid">
            ${investorsHTML}
        </div>
    `;

  // –†–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  initInvestorPhotoModals();
  initInvestorCardAnimations();
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
window.InvestorCards = {
  init: initInvestorPhotoModals,
  createCard: createInvestorCard,
  renderGrid: renderInvestorsGrid,
  investors: dexRabbitInvestors,
};
