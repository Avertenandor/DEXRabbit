const fs = require('fs');

/**
 * –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è HTML –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ CSS
 */
function updateHTMLForOptimization() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...\n');
  
  const htmlFiles = ['index.html'];
  
  htmlFiles.forEach(file => {
    if (!fs.existsSync(file)) return;
    
    let content = fs.readFileSync(file, 'utf8');
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    fs.writeFileSync(`${file}.backup`, content);
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ CSS –∏–º–ø–æ—Ä—Ç—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –æ–¥–∏–Ω
    const cssLinkRegex = /<!-- Styles -->([\s\S]*?)<!-- SEO Scripts -->/;
    const match = content.match(cssLinkRegex);
    
    if (match) {
      const newStylesSection = `<!-- Styles -->
    <link rel="stylesheet" href="/assets/css/combined.min.css" />
    
    <!-- SEO Scripts -->`;
      
      content = content.replace(cssLinkRegex, newStylesSection);
      
      fs.writeFileSync(file, content);
      console.log(`‚úÖ ${file}: CSS –∏–º–ø–æ—Ä—Ç—ã –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã`);
    }
  });
  
  console.log('\n‚ú® HTML —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ CSS!');
}

updateHTMLForOptimization();