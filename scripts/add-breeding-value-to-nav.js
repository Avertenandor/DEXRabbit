const fs = require('fs');
const path = require('path');

const BREEDING_VALUE_LINK = `                <li><a href="/breeding-value.html" class="nav-beautiful__dropdown-item">
                  <span class="nav-beautiful__dropdown-icon">üèÜ</span>
                  <div class="nav-beautiful__dropdown-text">
                    <span class="nav-beautiful__dropdown-title">–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å</span>
                    <span class="nav-beautiful__dropdown-desc">–ì–µ–Ω–µ—Ç–∏–∫–∞ –∏ —Å–µ–ª–µ–∫—Ü–∏—è</span>
                  </div>
                </a></li>
`;

function findHTMLFiles(dir, fileList = []) {
  const files = fs.readdirSync(dir);
  
  files.forEach((file) => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    
    if (stat.isDirectory()) {
      if (!['archive', 'templates', 'node_modules', '.git'].includes(file)) {
        findHTMLFiles(filePath, fileList);
      }
    } else if (file.endsWith('.html') && file !== 'index.html' && file !== 'breeding-value.html') {
      fileList.push(filePath);
    }
  });
  
  return fileList;
}

console.log('üèÜ –î–æ–±–∞–≤–ª—è—é "–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å" –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...\n');

const htmlFiles = findHTMLFiles(process.cwd());
let updatedCount = 0;

htmlFiles.forEach((filePath) => {
  const relativePath = path.relative(process.cwd(), filePath);
  let content = fs.readFileSync(filePath, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Å—ã–ª–∫–∞
  if (content.includes('breeding-value.html')) {
    console.log(`‚ö™ ${relativePath} - —É–∂–µ –µ—Å—Ç—å`);
    return;
  }
  
  // –ò—â–µ–º —Ä–∞–∑–¥–µ–ª "–ü–æ—Ä–æ–¥—ã" –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –ü–ï–†–í–û–ô
  const breedsSectionMatch = content.match(/(<button class="nav-beautiful__btn">\s*–ü–æ—Ä–æ–¥—ã[\s\S]*?<ul class="nav-beautiful__dropdown-list">)/);
  
  if (breedsSectionMatch) {
    const replacement = breedsSectionMatch[0] + '\n' + BREEDING_VALUE_LINK;
    content = content.replace(breedsSectionMatch[0], replacement);
    
    fs.writeFileSync(filePath, content, 'utf8');
    updatedCount++;
    console.log(`‚úÖ ${relativePath}`);
  } else {
    console.log(`‚ö†Ô∏è  ${relativePath} - —Ä–∞–∑–¥–µ–ª –ü–æ—Ä–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  }
});

console.log(`\nüìä –ò–¢–û–ì–û: ${updatedCount} —Å—Ç—Ä–∞–Ω–∏—Ü –æ–±–Ω–æ–≤–ª–µ–Ω–æ`);
console.log('\n‚úÖ "–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é!');

