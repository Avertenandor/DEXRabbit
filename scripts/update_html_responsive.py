import os
import re
from pathlib import Path

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR = Path(r"C:\Users\konfu\Desktop\–ö—Ä–æ–ª–∏–∫–∏")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è HTML —Ñ–∞–π–ª–∞
def update_html_file(file_path):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç HTML —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ –º–µ—Ç–∞—Ç–µ–≥–∞–º–∏ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏."""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        updated = False
        
        # 1. –û–±–Ω–æ–≤–ª—è–µ–º viewport
        old_viewport = r'<meta name="viewport" content="width=device-width, initial-scale=1\.0">'
        new_viewport = '<meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">'
        
        if re.search(old_viewport, content):
            content = re.sub(old_viewport, new_viewport, content)
            updated = True
            print(f"  ‚úì –û–±–Ω–æ–≤–ª–µ–Ω viewport")
        
        # 2. –î–æ–±–∞–≤–ª—è–µ–º responsive.css –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if '/assets/css/responsive.css' not in content and '/assets/css/main.css' in content:
            # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ variables.css –∏–ª–∏ main.css
            if '/assets/css/variables.css' in content:
                pattern = r'(<link rel="stylesheet" href="/assets/css/variables\.css">)'
                replacement = r'\1\n    <link rel="stylesheet" href="/assets/css/avatars.css">\n    <link rel="stylesheet" href="/assets/css/responsive.css">'
            else:
                pattern = r'(<link rel="stylesheet" href="/assets/css/main\.css">)'
                replacement = r'\1\n    <link rel="stylesheet" href="/assets/css/avatars.css">\n    <link rel="stylesheet" href="/assets/css/responsive.css">'
            
            content = re.sub(pattern, replacement, content)
            updated = True
            print(f"  ‚úì –î–æ–±–∞–≤–ª–µ–Ω—ã responsive.css –∏ avatars.css")
        
        # 3. –î–æ–±–∞–≤–ª—è–µ–º nav.js –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if '/assets/js/nav.js' not in content and '</head>' in content:
            pattern = r'(</head>)'
            replacement = r'    <!-- Mobile Navigation Script -->\n    <script defer src="/assets/js/nav.js"></script>\n\1'
            content = re.sub(pattern, replacement, content)
            updated = True
            print(f"  ‚úì –î–æ–±–∞–≤–ª–µ–Ω nav.js")
        
        # 4. –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
        if 'onclick="toggleMenu()"' in content:
            content = content.replace(
                'onclick="toggleMenu()"', 
                'data-burger'
            )
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å burger –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            content = re.sub(
                r'class="mobile-nav-toggle"',
                'class="mobile-nav-toggle burger"',
                content
            )
            updated = True
            print(f"  ‚úì –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é")
        
        # 5. –î–æ–±–∞–≤–ª—è–µ–º data-menu –∫ nav-links
        if 'id="nav-menu"' in content and 'data-menu' not in content:
            content = content.replace(
                'id="nav-menu"',
                'id="nav-menu" data-menu'
            )
            updated = True
            print(f"  ‚úì –î–æ–±–∞–≤–ª–µ–Ω data-menu –∞—Ç—Ä–∏–±—É—Ç")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if updated and content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            return True
        
        return False
        
    except Exception as e:
        print(f"  ‚úó –û—à–∏–±–∫–∞: {e}")
        return False

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ HTML —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ."""
    print("=" * 60)
    print("DEXRabbit - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ HTML —Ñ–∞–π–ª—ã
    html_files = list(PROJECT_DIR.glob("*.html"))
    
    print(f"\n–ù–∞–π–¥–µ–Ω–æ HTML —Ñ–∞–π–ª–æ–≤: {len(html_files)}")
    print("-" * 60)
    
    updated_count = 0
    skipped_count = 0
    error_count = 0
    
    for html_file in html_files:
        print(f"\nüìÑ {html_file.name}:")
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
        if html_file.name in ['og-test.html']:
            print(f"  ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω (—Å–ª—É–∂–µ–±–Ω—ã–π —Ñ–∞–π–ª)")
            skipped_count += 1
            continue
        
        if update_html_file(html_file):
            updated_count += 1
        else:
            print(f"  ‚ÑπÔ∏è  –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {updated_count}")
    print(f"  ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {skipped_count}")
    print(f"  ‚ÑπÔ∏è  –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(html_files) - updated_count - skipped_count}")
    print("=" * 60)
    
    return updated_count > 0

if __name__ == "__main__":
    success = main()
    if success:
        print("\n‚ú® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üìå –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git")
    else:
        print("\nüìå –§–∞–π–ª—ã —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è")
