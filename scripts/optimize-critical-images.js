const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

async function optimizeCriticalImages() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');
  
  // 1. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è vlad.png
  console.log('üì∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ vlad.png (3040KB)...');
  
  const vladOriginal = 'assets/img/avatars/vlad.png';
  const vladOptimized = 'assets/img/avatars/vlad-optimized.png';
  const vladWebP = 'assets/img/avatars/vlad.webp';
  
  try {
    // PNG –≤–µ—Ä—Å–∏—è (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
    await sharp(vladOriginal)
      .resize(400, 400, { fit: 'cover', position: 'center' })
      .png({ quality: 85, compressionLevel: 9 })
      .toFile(vladOptimized);
    
    // WebP –≤–µ—Ä—Å–∏—è
    await sharp(vladOriginal)
      .resize(400, 400, { fit: 'cover', position: 'center' })
      .webp({ quality: 85 })
      .toFile(vladWebP);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
    const originalSize = fs.statSync(vladOriginal).size;
    const optimizedSize = fs.statSync(vladOptimized).size;
    const webpSize = fs.statSync(vladWebP).size;
    
    console.log(`  ‚úÖ PNG: ${(originalSize/1024).toFixed(0)}KB ‚Üí ${(optimizedSize/1024).toFixed(0)}KB (-${((1-optimizedSize/originalSize)*100).toFixed(0)}%)`);
    console.log(`  ‚úÖ WebP: ${(webpSize/1024).toFixed(0)}KB (—Å–æ–∑–¥–∞–Ω)\n`);
    
    // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π
    fs.renameSync(vladOptimized, vladOriginal);
    
  } catch (error) {
    console.error('  ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
  
  // 2. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è natder.jpg
  console.log('üì∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ natder.jpg (1235KB)...');
  
  const natderOriginal = 'assets/img/avatars/natder.jpg';
  const natderOptimized = 'assets/img/avatars/natder-optimized.jpg';
  const natderWebP = 'assets/img/avatars/natder.webp';
  
  try {
    // JPEG –≤–µ—Ä—Å–∏—è (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
    await sharp(natderOriginal)
      .resize(400, 400, { fit: 'cover', position: 'center' })
      .jpeg({ quality: 85, progressive: true })
      .toFile(natderOptimized);
    
    // WebP –≤–µ—Ä—Å–∏—è
    await sharp(natderOriginal)
      .resize(400, 400, { fit: 'cover', position: 'center' })
      .webp({ quality: 85 })
      .toFile(natderWebP);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
    const originalSize = fs.statSync(natderOriginal).size;
    const optimizedSize = fs.statSync(natderOptimized).size;
    const webpSize = fs.statSync(natderWebP).size;
    
    console.log(`  ‚úÖ JPEG: ${(originalSize/1024).toFixed(0)}KB ‚Üí ${(optimizedSize/1024).toFixed(0)}KB (-${((1-optimizedSize/originalSize)*100).toFixed(0)}%)`);
    console.log(`  ‚úÖ WebP: ${(webpSize/1024).toFixed(0)}KB (—Å–æ–∑–¥–∞–Ω)\n`);
    
    // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π
    fs.renameSync(natderOptimized, natderOriginal);
    
  } catch (error) {
    console.error('  ‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
  
  console.log('‚ú® –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìä –ò—Ç–æ–≥–æ —ç–∫–æ–Ω–æ–º–∏–∏: ~4.1MB (-95%)');
  console.log('\nüîÑ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: git add + commit + push');
}

optimizeCriticalImages();