const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ HTML —Ñ–∞–π–ª–æ–≤
 */
function optimizeHTML() {
  console.log('üìè –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è HTML —Ñ–∞–π–ª–æ–≤...\n');
  
  const htmlFiles = ['index.html', 'contacts.html', 'belarus-office.html'];
  
  htmlFiles.forEach(file => {
    if (!fs.existsSync(file)) {
      console.log(`‚ö†Ô∏è  ${file}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    let content = fs.readFileSync(file, 'utf8');
    const originalSize = content.length;
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    content = content
      // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏
      .replace(/>\s+</g, '><')
      // –£–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ HTML (–∫—Ä–æ–º–µ —É—Å–ª–æ–≤–Ω—ã—Ö)
      .replace(/<!--(?!\[if|<!\[endif)[\s\S]*?-->/g, '')
      // –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
      .replace(/\n\s*\n/g, '\n')
      // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
      .replace(/^\s+/gm, '')
      // –°–∂–∏–º–∞–µ–º inline —Å—Ç–∏–ª–∏
      .replace(/style\s*=\s*"([^"]+)"/g, (match, style) => {
        return `style="${style.replace(/\s+/g, ' ').trim()}"`;
      });
    
    const newSize = content.length;
    const savings = ((originalSize - newSize) / originalSize * 100).toFixed(1);
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if (!fs.existsSync('backup')) {
      fs.mkdirSync('backup');
    }
    fs.writeFileSync(`backup/${file}`, fs.readFileSync(file));
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(file, content);
    
    console.log(`‚úÖ ${file}:`);
    console.log(`   –ë—ã–ª–æ: ${(originalSize/1024).toFixed(1)}KB`);
    console.log(`   –°—Ç–∞–ª–æ: ${(newSize/1024).toFixed(1)}KB`);
    console.log(`   –≠–∫–æ–Ω–æ–º–∏—è: ${savings}%\n`);
  });
  
  console.log('‚ú® HTML —Ñ–∞–π–ª—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
}

optimizeHTML();