/**
 * DEXRabbit - –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ–µ–∫—Ç–∞
 * –í–µ—Ä—Å–∏—è: 1.0
 * –î–∞—Ç–∞: 30.09.2025
 */

const fs = require('fs');
const path = require('path');

// ============= –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =============

// –ù–æ–≤–∞—è —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
const NEW_NAV_HTML = `    <!-- Navigation -->
    <nav class="navbar" role="navigation">
      <div class="container">
        <!-- Logo Section -->
        <div class="navbar-header">
          <div class="logo-wrapper">
            <a href="/" class="site-logo">
              <img src="/favicon.svg" alt="DEXRabbit" />
              <div class="logo-text">
                <span class="logo-title">DEXRabbit</span>
                <span class="logo-slogan">–¢–≤–æ–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –Ω–∞ –∫—Ä–æ–ª–∏–∫–∞—Ö</span>
              </div>
            </a>
          </div>
          <button class="mobile-nav-toggle burger" aria-label="–ú–µ–Ω—é" data-burger>‚ò∞</button>
        </div>

        <!-- Navigation Links -->
        <div class="navbar-inner">
          <div class="nav-links" id="nav-menu" data-menu>
            <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–∑ navigation-data.js -->
            <!-- Primary Navigation -->
            <div class="nav-group nav-primary"></div>

            <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã -->
            <div class="nav-group nav-dropdown">
              <button
                class="nav-dropdown-toggle"
                type="button"
                aria-haspopup="true"
                aria-expanded="false"
                aria-controls="nav-dropdown-menu"
              >
                –ï—â—ë <span class="dropdown-arrow" aria-hidden="true">‚ñæ</span>
              </button>
              <div class="nav-dropdown-content" id="nav-dropdown-menu" role="menu" hidden></div>
            </div>

            <!-- CTA –∫–Ω–æ–ø–∫–∞ -->
            <a href="https://t.me/dexrabbit_bot" class="btn btn-primary nav-cta"
              >üí¨ –ù–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å</a
            >
          </div>
        </div>
      </div>
    </nav>`;

// –°—Ç–∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const NAV_STYLES = `    <!-- Unified Navigation Styles -->
    <link rel="stylesheet" href="/assets/css/navigation.css">`;

// –°–∫—Ä–∏–ø—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const NAV_SCRIPTS = `    <!-- Unified Navigation Data -->
    <script defer src="/assets/js/navigation-data.js?v=2.0"></script>
    <!-- Mobile Navigation Script -->
    <script defer src="/assets/js/nav.js?v=20250930"></script>`;

// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ Telegram —Å—Å—ã–ª–∫–∏
const TELEGRAM_LINKS = {
  bot: 'https://t.me/dexrabbit_bot',
  channel: 'https://t.me/DexRebbitOfficial',
  group: 'https://t.me/DEXRabbitOfficialGroupInfo',
};

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const HTML_FILES = [
  'index.html',
  'breeding.html',
  'gifts.html',
  'restaurants.html',
  'rabbits-hares.html',
  'cats-rabbits.html',
  'care.html',
  'therapy.html',
  'logistics.html',
  'development.html',
  'reports.html',
  'investors.html',
  'investment-model.html',
  'partnership.html',
  'guarantees.html',
  'contacts.html',
  'careers.html',
];

// ============= –§–£–ù–ö–¶–ò–ò =============

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function updateNavigation(content, filename) {
  let updated = false;

  // –î–æ–±–∞–≤–ª—è–µ–º navigation.css –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if (!content.includes('navigation.css')) {
    const insertPoint = content.indexOf('</head>');
    if (insertPoint !== -1) {
      content =
        content.substring(0, insertPoint) + NAV_STYLES + '\n' + content.substring(insertPoint);
      updated = true;
    }
  }

  // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ –Ω–æ–≤—É—é
  const navStart = content.indexOf('<!-- Navigation -->');
  const navEnd = content.indexOf('</nav>');

  if (navStart !== -1 && navEnd !== -1) {
    const endTag = content.indexOf('>', navEnd) + 1;
    const oldNav = content.substring(navStart, endTag);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (!oldNav.includes('navigation-data.js')) {
      content = content.replace(oldNav, NEW_NAV_HTML);
      updated = true;
      console.log(`  ‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ ${filename}`);
    }
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  if (!content.includes('navigation-data.js')) {
    const bodyEnd = content.lastIndexOf('</body>');
    if (bodyEnd !== -1) {
      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ inline —Å–∫—Ä–∏–ø—Ç—ã toggleMenu –µ—Å–ª–∏ –µ—Å—Ç—å
      content = content.replace(/<script>\s*\/\/\s*Mobile menu toggle[\s\S]*?<\/script>/g, '');
      content = content.replace(/function toggleMenu\(\)[\s\S]*?\n    }/g, '');

      // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
      content =
        content.substring(0, bodyEnd) + '\n' + NAV_SCRIPTS + '\n' + content.substring(bodyEnd);
      updated = true;
    }
  }

  return { content, updated };
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram —Å—Å—ã–ª–æ–∫
function fixTelegramLinks(content, filename) {
  let updated = false;
  const oldLinks = [
    { old: 'https://t.me/dexrabbit_channel', new: TELEGRAM_LINKS.channel },
    { old: 't.me/dexrabbit_channel', new: TELEGRAM_LINKS.channel },
    { old: '@dexrabbit_channel', new: '@DexRebbitOfficial' },
    { old: 'https://t.me/dexrabbit_group', new: TELEGRAM_LINKS.group },
    { old: 't.me/dexrabbit_group', new: TELEGRAM_LINKS.group },
    { old: '@dexrabbit_group', new: '@DEXRabbitOfficialGroupInfo' },
  ];

  oldLinks.forEach(link => {
    const regex = new RegExp(escapeRegex(link.old), 'g');
    const matches = content.match(regex);
    if (matches) {
      content = content.replace(regex, link.new);
      updated = true;
      console.log(`  ‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ ${matches.length} —Å—Å—ã–ª–æ–∫: ${link.old} ‚Üí ${link.new}`);
    }
  });

  return { content, updated };
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ PLEX
function fixPlexAddress(content, filename) {
  let updated = false;

  // –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –ø—É–ª–∞ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º
  if (
    content.includes('–ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ PLEX:</strong> 0x41d9650faf3341cbf8947fd8063a1fc88dbf1889')
  ) {
    content = content.replace(
      '–ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ PLEX:</strong> 0x41d9650faf3341cbf8947fd8063a1fc88dbf1889',
      '–ê–¥—Ä–µ—Å –ø—É–ª–∞ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ PLEX/WBNB:</strong> 0x41d9650faf3341cbf8947fd8063a1fc88dbf1889'
    );
    updated = true;
    console.log(`  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–ø–∏—Å—å –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –≤ ${filename}`);
  }

  return { content, updated };
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ OG –º–µ—Ç–∞-—Ç–µ–≥–æ–≤
function addOGMetaTags(content, filename) {
  let updated = false;

  if (!content.includes('og:image')) {
    const ogTags = `    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://xn--80apagbbfxgmuj4j.site/og/og-rabbit.jpg?v=20250930" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="DEXRabbit" />
    <meta property="og:locale" content="ru_RU" />
    
    <!-- Twitter / X -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content="https://xn--80apagbbfxgmuj4j.site/og/og-rabbit.jpg?v=20250930" />`;

    const insertPoint = content.indexOf('</head>');
    if (insertPoint !== -1) {
      content =
        content.substring(0, insertPoint) + '\n' + ogTags + '\n' + content.substring(insertPoint);
      updated = true;
      console.log(`  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã OG –º–µ—Ç–∞-—Ç–µ–≥–∏ –≤ ${filename}`);
    }
  }

  return { content, updated };
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
function escapeRegex(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
function processFile(filename) {
  const filePath = path.join(__dirname, '..', filename);

  if (!fs.existsSync(filePath)) {
    console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filename}`);
    return;
  }

  console.log(`\nüìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞: ${filename}`);

  let content = fs.readFileSync(filePath, 'utf8');
  let totalUpdates = false;

  // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  let result;

  result = updateNavigation(content, filename);
  content = result.content;
  totalUpdates = totalUpdates || result.updated;

  result = fixTelegramLinks(content, filename);
  content = result.content;
  totalUpdates = totalUpdates || result.updated;

  result = fixPlexAddress(content, filename);
  content = result.content;
  totalUpdates = totalUpdates || result.updated;

  result = addOGMetaTags(content, filename);
  content = result.content;
  totalUpdates = totalUpdates || result.updated;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  if (totalUpdates) {
    fs.writeFileSync(filePath, content, 'utf8');
    console.log(`  üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω`);
  } else {
    console.log(`  ‚ÑπÔ∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è`);
  }
}

// ============= –°–û–ó–î–ê–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• CSS –§–ê–ô–õ–û–í =============

function createMissingCSSFiles() {
  console.log('\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö CSS —Ñ–∞–π–ª–æ–≤...\n');

  const cssDir = path.join(__dirname, '..', 'assets', 'css');

  // print.css
  const printCss = path.join(cssDir, 'print.css');
  if (!fs.existsSync(printCss)) {
    const printContent = `/* DEXRabbit - Print Styles */
@media print {
  /* –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ */
  .navbar,
  .footer,
  .hero-cta,
  .btn,
  .mobile-nav-toggle,
  .nav-dropdown,
  video,
  iframe {
    display: none !important;
  }
  
  /* –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏ */
  body {
    font-size: 12pt;
    line-height: 1.5;
    color: #000;
    background: #fff;
  }
  
  .container {
    max-width: 100%;
    margin: 0;
    padding: 0;
  }
  
  h1, h2, h3, h4, h5, h6 {
    page-break-after: avoid;
    color: #000;
  }
  
  img {
    max-width: 100%;
    page-break-inside: avoid;
  }
  
  a {
    color: #000;
    text-decoration: underline;
  }
  
  a[href^="http"]:after {
    content: " (" attr(href) ")";
    font-size: 0.8em;
  }
}`;
    fs.writeFileSync(printCss, printContent, 'utf8');
    console.log('  ‚úÖ –°–æ–∑–¥–∞–Ω print.css');
  }

  // animations.css
  const animationsCss = path.join(cssDir, 'animations.css');
  if (!fs.existsSync(animationsCss)) {
    const animationsContent = `/* DEXRabbit - Animations */

/* Fade In */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Pulse */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

/* Slide In */
@keyframes slideIn {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Bounce */
@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Gradient Animation */
@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π */
.animate-fadeIn {
  animation: fadeIn 0.6s ease-out;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-slideIn {
  animation: slideIn 0.5s ease-out;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient 3s ease infinite;
}

/* Hover —ç—Ñ—Ñ–µ–∫—Ç—ã */
.hover-lift {
  transition: transform 0.3s ease;
}

.hover-lift:hover {
  transform: translateY(-5px);
}

.hover-glow {
  transition: box-shadow 0.3s ease;
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(124, 140, 255, 0.4);
}`;
    fs.writeFileSync(animationsCss, animationsContent, 'utf8');
    console.log('  ‚úÖ –°–æ–∑–¥–∞–Ω animations.css');
  }
}

// ============= –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê =============

console.log('üöÄ DEXRabbit - –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º');
console.log('================================================\n');

// –°–æ–∑–¥–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ CSS —Ñ–∞–π–ª—ã
createMissingCSSFiles();

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ HTML —Ñ–∞–π–ª—ã
console.log('\nüìù –û–±—Ä–∞–±–æ—Ç–∫–∞ HTML —Ñ–∞–π–ª–æ–≤...');
HTML_FILES.forEach(file => {
  processFile(file);
});

// –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
console.log('\n================================================');
console.log('‚ú® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('\nüìã –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:');
console.log('  ‚Ä¢ –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö');
console.log('  ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ Telegram —Å—Å—ã–ª–∫–∏');
console.log('  ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–ø–∏—Å—å –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ PLEX');
console.log('  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã OG –º–µ—Ç–∞-—Ç–µ–≥–∏');
console.log('  ‚Ä¢ –°–æ–∑–¥–∞–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ CSS —Ñ–∞–π–ª—ã');
console.log('\n‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ:');
console.log('  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è: git status');
console.log('  2. –î–æ–±–∞–≤–∏—Ç—å –≤ git: git add -A');
console.log('  3. –°–¥–µ–ª–∞—Ç—å –∫–æ–º–º–∏—Ç: git commit -m "fix: –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —Å—Å—ã–ª–æ–∫"');
console.log('  4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ GitHub: git push origin main');
console.log('\nüåê –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—è–≤—è—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ push');
