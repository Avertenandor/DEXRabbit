// Task 23: Online consultant widget
class OnlineConsultant {
    constructor() {
        this.isOpen = false;
        this.messages = [
            {
                type: 'bot',
                text: 'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∫—Ä–æ–ª–∏–∫–∞. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
                time: new Date().toLocaleTimeString('ru', { hour: '2-digit', minute: '2-digit' })
            }
        ];
        
        this.quickReplies = [
            { text: 'üê∞ –í—ã–±–æ—Ä –ø–æ—Ä–æ–¥—ã', action: 'breed_selection' },
            { text: 'üí∞ –¶–µ–Ω—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å', action: 'pricing' },
            { text: 'üöö –î–æ—Å—Ç–∞–≤–∫–∞', action: 'delivery' },
            { text: 'üìã –î–æ–∫—É–º–µ–Ω—Ç—ã', action: 'documents' },
            { text: 'üçé –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ —É—Ö–æ–¥', action: 'care' },
            { text: 'üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º', action: 'expert' }
        ];
        
        this.responses = {
            breed_selection: [
                '–î–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ—Ä–æ–¥—ã –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å –≤–∞—à–∏ —Ü–µ–ª–∏:',
                'üéØ **–î–ª—è –¥–µ—Ç–µ–π –∏ –¥–æ–º–∞** - –ë–µ–ª—ã–π –≤–µ–ª–∏–∫–∞–Ω (—Å–ø–æ–∫–æ–π–Ω—ã–π, –ª–∞—Å–∫–æ–≤—ã–π)',
                'üèÜ **–î–ª—è —Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è** - –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–π—Å–∫–∏–π (–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π, –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–π)', 
                'üíé **–î–ª—è –≤—ã—Å—Ç–∞–≤–æ–∫** - –°–æ–≤–µ—Ç—Å–∫–∞—è —à–∏–Ω—à–∏–ª–ª–∞ (–∫—Ä–∞—Å–∏–≤—ã–π –º–µ—Ö, —Å—Ç–∞–Ω–¥–∞—Ä—Ç)',
                '',
                '–ö–∞–∫–∞—è —Ü–µ–ª—å —É –≤–∞—Å?'
            ],
            pricing: [
                'üí∞ **–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã:**',
                '‚Ä¢ –ë–µ–ª—ã–π –≤–µ–ª–∏–∫–∞–Ω: 7500-8500 ‚ÇΩ',
                '‚Ä¢ –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–π—Å–∫–∏–π: 6500-7500 ‚ÇΩ',  
                '‚Ä¢ –°–æ–≤–µ—Ç—Å–∫–∞—è —à–∏–Ω—à–∏–ª–ª–∞: 8000-9500 ‚ÇΩ',
                '',
                'üéÅ –°–∫–∏–¥–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –æ—Ç 3—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö - 10%',
                'üìã –í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥—è—Ç –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'
            ],
            delivery: [
                'üöö **–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏:**',
                'üè† –°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –ü–æ–¥–æ–ª—å—Å–∫–∞ - **–ë–ï–°–ü–õ–ê–¢–ù–û**',
                'üöó –ü–æ –ú–æ—Å–∫–≤–µ –∏ –ú–û - –æ—Ç 1500 ‚ÇΩ',
                '‚úàÔ∏è –í —Ä–µ–≥–∏–æ–Ω—ã - –ø–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é',
                '',
                'üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–Ω–æ—Å–∫–∞—Ö —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏',
                '‚è∞ –û–±—ã—á–Ω–æ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞'
            ],
            documents: [
                'üìã **–î–æ–∫—É–º–µ–Ω—Ç—ã –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ:**',
                '‚úÖ –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞',
                '‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–≤–∏–≤–∫–∞—Ö', 
                '‚úÖ –†–æ–¥–æ—Å–ª–æ–≤–Ω–∞—è (–¥–ª—è –ø–ª–µ–º–µ–Ω–Ω—ã—Ö)',
                '‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é',
                '',
                'üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è –∑–¥–æ—Ä–æ–≤—å—è - 14 –¥–Ω–µ–π'
            ],
            care: [
                'üê∞ **–û—Å–Ω–æ–≤—ã —É—Ö–æ–¥–∞:**',
                'üè† –ö–ª–µ—Ç–∫–∞ –º–∏–Ω. 120√ó60√ó50 —Å–º',
                'ü•ï –°–µ–Ω–æ + –≥—Ä–∞–Ω—É–ª—ã + –æ–≤–æ—â–∏',
                'üíß –°–≤–µ–∂–∞—è –≤–æ–¥–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
                'üßπ –£–±–æ—Ä–∫–∞ 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é',
                '',
                'üìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ –Ω–∞—à–µ–º [–±–ª–æ–≥–µ](/blog)'
            ],
            expert: [
                'üë®‚Äçüíº **–°–≤—è–∑–∞—Ç—å—Å—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º:**',
                'üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67',
                'üí¨ WhatsApp: [–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ](https://wa.me/79991234567)',
                'üìß Email: info@–∫—É–ø–∏—Ç—å–∫—Ä–æ–ª–∏–∫–∞.—Ä—Ñ',
                '',
                '‚è∞ –†–∞–±–æ—Ç–∞–µ–º: –ü–Ω-–ü—Ç 9:00-18:00, –°–±-–í—Å 10:00-16:00'
            ]
        };
        
        this.init();
    }

    init() {
        this.createWidget();
        this.attachEventListeners();
    }

    createWidget() {
        // Create widget HTML
        const widgetHTML = `
            <div id="consultant-widget" class="consultant-widget">
                <!-- Chat button -->
                <button id="consultant-toggle" class="consultant-toggle" aria-label="–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç">
                    <span class="consultant-icon">üí¨</span>
                    <span class="consultant-badge">–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –æ–Ω–ª–∞–π–Ω</span>
                </button>
                
                <!-- Chat window -->
                <div id="consultant-chat" class="consultant-chat">
                    <div class="consultant-header">
                        <div class="consultant-title">
                            <span class="consultant-avatar">üê∞</span>
                            <div>
                                <div class="consultant-name">–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞</div>
                                <div class="consultant-status">–û–Ω–ª–∞–π–Ω ‚Ä¢ –û—Ç–≤–µ—á–∞–µ–º –±—ã—Å—Ç—Ä–æ</div>
                            </div>
                        </div>
                        <button id="consultant-close" class="consultant-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç">‚úï</button>
                    </div>
                    
                    <div class="consultant-messages" id="consultant-messages">
                        <!-- Messages will be added here -->
                    </div>
                    
                    <div class="consultant-quick-replies" id="consultant-quick-replies">
                        <!-- Quick replies will be added here -->
                    </div>
                    
                    <div class="consultant-input">
                        <input type="text" id="consultant-input-field" placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å..." maxlength="500">
                        <button id="consultant-send" class="consultant-send-btn" aria-label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å">
                            ‚û§
                        </button>
                    </div>
                </div>
            </div>
        `;

        // Add to page
        document.body.insertAdjacentHTML('beforeend', widgetHTML);
        
        // Add CSS
        this.addStyles();
        
        // Render initial messages
        this.renderMessages();
        this.renderQuickReplies();
    }

    addStyles() {
        const styles = `
            <style>
            .consultant-widget {
                position: fixed;
                bottom: 20px;
                right: 20px;
                z-index: 1000;
                font-family: var(--font-family-base);
            }
            
            .consultant-toggle {
                background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
                border: none;
                border-radius: 25px;
                padding: 12px 20px;
                color: white;
                cursor: pointer;
                display: flex;
                align-items: center;
                gap: 8px;
                font-size: 14px;
                font-weight: 500;
                box-shadow: 0 4px 20px rgba(16, 185, 129, 0.3);
                transition: all 0.3s ease;
            }
            
            .consultant-toggle:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 25px rgba(16, 185, 129, 0.4);
            }
            
            .consultant-toggle.active {
                display: none;
            }
            
            .consultant-badge {
                position: relative;
            }
            
            .consultant-badge::before {
                content: '';
                position: absolute;
                left: -12px;
                top: 50%;
                transform: translateY(-50%);
                width: 8px;
                height: 8px;
                background: #00ff88;
                border-radius: 50%;
                animation: pulse 2s infinite;
            }
            
            @keyframes pulse {
                0% { box-shadow: 0 0 0 0 rgba(0, 255, 136, 0.7); }
                70% { box-shadow: 0 0 0 10px rgba(0, 255, 136, 0); }
                100% { box-shadow: 0 0 0 0 rgba(0, 255, 136, 0); }
            }
            
            .consultant-chat {
                display: none;
                position: fixed;
                bottom: 20px;
                right: 20px;
                width: 380px;
                max-width: calc(100vw - 40px);
                height: 600px;
                max-height: calc(100vh - 40px);
                background: white;
                border-radius: 16px;
                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
                overflow: hidden;
                display: flex;
                flex-direction: column;
            }
            
            .consultant-chat.active {
                display: flex;
            }
            
            .consultant-header {
                background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
                color: white;
                padding: 16px;
                display: flex;
                align-items: center;
                justify-content: space-between;
            }
            
            .consultant-title {
                display: flex;
                align-items: center;
                gap: 12px;
            }
            
            .consultant-avatar {
                width: 40px;
                height: 40px;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 18px;
            }
            
            .consultant-name {
                font-weight: 600;
                font-size: 16px;
            }
            
            .consultant-status {
                font-size: 12px;
                opacity: 0.9;
            }
            
            .consultant-close {
                background: none;
                border: none;
                color: white;
                font-size: 20px;
                cursor: pointer;
                padding: 4px;
                border-radius: 4px;
                transition: background-color 0.2s;
            }
            
            .consultant-close:hover {
                background: rgba(255, 255, 255, 0.1);
            }
            
            .consultant-messages {
                flex: 1;
                overflow-y: auto;
                padding: 16px;
                display: flex;
                flex-direction: column;
                gap: 12px;
            }
            
            .consultant-message {
                max-width: 80%;
                padding: 12px 16px;
                border-radius: 16px;
                line-height: 1.4;
            }
            
            .consultant-message.bot {
                background: #f3f4f6;
                color: #374151;
                align-self: flex-start;
                border-bottom-left-radius: 4px;
            }
            
            .consultant-message.user {
                background: var(--color-primary);
                color: white;
                align-self: flex-end;
                border-bottom-right-radius: 4px;
            }
            
            .consultant-message-time {
                font-size: 10px;
                opacity: 0.6;
                margin-top: 4px;
            }
            
            .consultant-quick-replies {
                padding: 12px 16px;
                border-top: 1px solid #e5e7eb;
                display: flex;
                flex-wrap: wrap;
                gap: 8px;
            }
            
            .consultant-quick-reply {
                background: #f9fafb;
                border: 1px solid #d1d5db;
                border-radius: 20px;
                padding: 8px 12px;
                font-size: 12px;
                cursor: pointer;
                transition: all 0.2s;
            }
            
            .consultant-quick-reply:hover {
                background: var(--color-primary);
                color: white;
                border-color: var(--color-primary);
            }
            
            .consultant-input {
                padding: 16px;
                border-top: 1px solid #e5e7eb;
                display: flex;
                gap: 8px;
            }
            
            #consultant-input-field {
                flex: 1;
                padding: 12px;
                border: 1px solid #d1d5db;
                border-radius: 20px;
                font-size: 14px;
                outline: none;
            }
            
            #consultant-input-field:focus {
                border-color: var(--color-primary);
            }
            
            .consultant-send-btn {
                width: 40px;
                height: 40px;
                background: var(--color-primary);
                border: none;
                border-radius: 50%;
                color: white;
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: background-color 0.2s;
            }
            
            .consultant-send-btn:hover {
                background: var(--color-secondary);
            }
            
            .consultant-send-btn:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }
            
            @media (max-width: 480px) {
                .consultant-chat {
                    width: calc(100vw - 20px);
                    height: calc(100vh - 20px);
                    bottom: 10px;
                    right: 10px;
                }
                
                .consultant-toggle {
                    bottom: 10px;
                    right: 10px;
                }
            }
            </style>
        `;
        
        document.head.insertAdjacentHTML('beforeend', styles);
    }

    attachEventListeners() {
        const toggle = document.getElementById('consultant-toggle');
        const close = document.getElementById('consultant-close');
        const sendBtn = document.getElementById('consultant-send');
        const input = document.getElementById('consultant-input-field');

        toggle?.addEventListener('click', () => this.openChat());
        close?.addEventListener('click', () => this.closeChat());
        sendBtn?.addEventListener('click', () => this.sendMessage());
        
        input?.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                this.sendMessage();
            }
        });

        // Track consultant usage
        toggle?.addEventListener('click', () => {
            if (typeof trackEvent === 'function') {
                trackEvent('consultant_open', { event_category: 'engagement' });
            }
        });
    }

    openChat() {
        const toggle = document.getElementById('consultant-toggle');
        const chat = document.getElementById('consultant-chat');
        
        toggle?.classList.add('active');
        chat?.classList.add('active');
        this.isOpen = true;
        
        // Focus input
        setTimeout(() => {
            document.getElementById('consultant-input-field')?.focus();
        }, 100);
    }

    closeChat() {
        const toggle = document.getElementById('consultant-toggle');
        const chat = document.getElementById('consultant-chat');
        
        toggle?.classList.remove('active');
        chat?.classList.remove('active');
        this.isOpen = false;
    }

    sendMessage() {
        const input = document.getElementById('consultant-input-field');
        const text = input?.value.trim();
        
        if (!text) return;
        
        // Add user message
        this.addMessage('user', text);
        input.value = '';
        
        // Simulate bot response
        setTimeout(() => {
            this.handleBotResponse(text);
        }, 1000);
        
        // Track message
        if (typeof trackEvent === 'function') {
            trackEvent('consultant_message', { 
                event_category: 'engagement',
                message_length: text.length 
            });
        }
    }

    handleQuickReply(action) {
        const response = this.responses[action];
        if (response) {
            setTimeout(() => {
                this.addMessage('bot', response.join('\n'));
            }, 500);
        }
        
        // Track quick reply usage
        if (typeof trackEvent === 'function') {
            trackEvent('consultant_quick_reply', { 
                event_category: 'engagement',
                action: action 
            });
        }
    }

    handleBotResponse(userMessage) {
        const lowerMessage = userMessage.toLowerCase();
        let response = [];

        // Simple keyword matching
        if (lowerMessage.includes('–ø–æ—Ä–æ–¥–∞') || lowerMessage.includes('–≤—ã–±–æ—Ä')) {
            response = this.responses.breed_selection;
        } else if (lowerMessage.includes('—Ü–µ–Ω–∞') || lowerMessage.includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å')) {
            response = this.responses.pricing;
        } else if (lowerMessage.includes('–¥–æ—Å—Ç–∞–≤–∫–∞') || lowerMessage.includes('–¥–æ—Å—Ç–∞–≤–∏—Ç—å')) {
            response = this.responses.delivery;
        } else if (lowerMessage.includes('–¥–æ–∫—É–º–µ–Ω—Ç') || lowerMessage.includes('—Å–ø—Ä–∞–≤–∫–∞')) {
            response = this.responses.documents;
        } else if (lowerMessage.includes('—É—Ö–æ–¥') || lowerMessage.includes('—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ')) {
            response = this.responses.care;
        } else {
            // Default response
            response = [
                '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! ü§î',
                '',
                '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º —ç–∫—Å–ø–µ—Ä—Ç–æ–º:',
                'üì± **+7 (999) 123-45-67**',
                'üí¨ **WhatsApp**: [–ù–∞–ø–∏—Å–∞—Ç—å](https://wa.me/79991234567)',
                '',
                '–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ üëá'
            ];
        }

        this.addMessage('bot', response.join('\n'));
    }

    addMessage(type, text) {
        const time = new Date().toLocaleTimeString('ru', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });
        
        this.messages.push({ type, text, time });
        this.renderMessages();
        
        // Scroll to bottom
        const messagesContainer = document.getElementById('consultant-messages');
        if (messagesContainer) {
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
    }

    renderMessages() {
        const container = document.getElementById('consultant-messages');
        if (!container) return;

        container.innerHTML = this.messages.map(message => `
            <div class="consultant-message ${message.type}">
                <div>${this.formatMessage(message.text)}</div>
                <div class="consultant-message-time">${message.time}</div>
            </div>
        `).join('');
    }

    renderQuickReplies() {
        const container = document.getElementById('consultant-quick-replies');
        if (!container) return;

        container.innerHTML = this.quickReplies.map(reply => `
            <button class="consultant-quick-reply" onclick="consultant.handleQuickReply('${reply.action}')">
                ${reply.text}
            </button>
        `).join('');
    }

    formatMessage(text) {
        // Simple markdown-like formatting
        return text
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            .replace(/\[(.*?)\]\((.*?)\)/g, '<a href="$2" target="_blank">$1</a>')
            .replace(/\n/g, '<br>');
    }
}

// Initialize consultant when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    if (!window.consultant) {
        window.consultant = new OnlineConsultant();
    }
});