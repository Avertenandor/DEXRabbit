#!/usr/bin/env node
/**
 * üß™ –ë—ã—Å—Ç—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞
 * –ü—Ä–æ—Å—Ç–æ–µ, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ç—è–∂—ë–ª—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */

const https = require('https');
const fs = require('fs').promises;

class QuickTester {
    constructor(baseUrl = 'https://xn--80apagbbfxgmuj4j.site') {
        this.baseUrl = baseUrl;
        this.results = {
            total: 0,
            passed: 0,
            failed: 0,
            errors: []
        };
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async testPageAccess(path, expectedTitle) {
        try {
            const url = `${this.baseUrl}${path}`;
            console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${url}`);
            
            const response = await this.makeRequest(url);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–¥
            if (response.statusCode !== 200) {
                throw new Error(`HTTP ${response.statusCode}: ${response.statusMessage}`);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            const html = response.data;
            
            // –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ HTML
            if (!html.includes('<!DOCTYPE html>')) {
                throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç DOCTYPE');
            }
            
            if (!html.includes('<html lang="ru">')) {
                throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç lang="ru"');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º title
            const titleMatch = html.match(/<title>(.*?)<\/title>/);
            if (!titleMatch) {
                throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–≥ <title>');
            }
            
            const actualTitle = titleMatch[1];
            if (expectedTitle && !actualTitle.includes(expectedTitle)) {
                throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π title. –û–∂–∏–¥–∞–ª—Å—è: ${expectedTitle}, –ø–æ–ª—É—á–µ–Ω: ${actualTitle}`);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏
            if (!html.includes('meta name="viewport"')) {
                throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç viewport meta');
            }
            
            if (!html.includes('meta charset="UTF-8"')) {
                throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç UTF-8 charset');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ CSS
            if (!html.includes('styles/global.css')) {
                throw new Error('–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω global.css');
            }
            
            this.logSuccess(`‚úÖ ${path} - OK (${html.length} bytes)`);
            return true;
            
        } catch (error) {
            this.logError(`‚ùå ${path} - –û–®–ò–ë–ö–ê: ${error.message}`);
            return false;
        }
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º
    async testForms() {
        console.log('\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º...');
        
        const forms = [
            { page: '/', formId: 'investment-form', name: '–§–æ—Ä–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π' },
            { page: '/restaurants.html', formId: 'partnership-form', name: '–§–æ—Ä–º–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞' },
            { page: '/gifts.html', formId: 'gift-form', name: '–§–æ—Ä–º–∞ –ø–æ–¥–∞—Ä–∫–æ–≤' },
            { page: '/breeding.html', formId: 'breeding-form', name: '–§–æ—Ä–º–∞ —Å–µ–ª–µ–∫—Ü–∏–∏' },
            { page: '/contacts.html', formId: 'contact-form', name: '–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏' }
        ];
        
        for (const form of forms) {
            try {
                const response = await this.makeRequest(`${this.baseUrl}${form.page}`);
                const html = response.data;
                
                if (html.includes(`id="${form.formId}"`)) {
                    this.logSuccess(`‚úÖ ${form.name} –Ω–∞–π–¥–µ–Ω–∞`);
                } else {
                    throw new Error(`–§–æ—Ä–º–∞ ${form.formId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç —Å–ø–∞–º–∞
                if (html.includes('name="honeypot"')) {
                    this.logSuccess(`üõ°Ô∏è ${form.name} –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç —Å–ø–∞–º–∞`);
                }
                
            } catch (error) {
                this.logError(`‚ùå ${form.name}: ${error.message}`);
            }
        }
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    async testPerformance() {
        console.log('\n‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
        
        const pages = ['/', '/restaurants.html', '/gifts.html', '/investment-model.html'];
        
        for (const page of pages) {
            try {
                const startTime = Date.now();
                const response = await this.makeRequest(`${this.baseUrl}${page}`);
                const loadTime = Date.now() - startTime;
                
                if (loadTime < 3000) {
                    this.logSuccess(`üöÄ ${page} –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∑–∞ ${loadTime}–º—Å (–ë–´–°–¢–†–û)`);
                } else if (loadTime < 5000) {
                    this.logWarning(`‚ö†Ô∏è ${page} –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∑–∞ ${loadTime}–º—Å (–ú–ï–î–õ–ï–ù–ù–û)`);
                } else {
                    throw new Error(`–û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: ${loadTime}–º—Å`);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
                const size = response.data.length;
                if (size > 500000) { // 500KB
                    this.logWarning(`‚ö†Ô∏è ${page} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è: ${(size/1024).toFixed(1)}KB`);
                }
                
            } catch (error) {
                this.logError(`‚ùå ${page}: ${error.message}`);
            }
        }
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏
    async testMobileResponsiveness() {
        console.log('\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
        
        const pages = ['/', '/restaurants.html', '/gifts.html'];
        
        for (const page of pages) {
            try {
                const response = await this.makeRequest(`${this.baseUrl}${page}`);
                const html = response.data;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º viewport
                if (html.includes('viewport') && html.includes('width=device-width')) {
                    this.logSuccess(`üì± ${page} –∏–º–µ–µ—Ç viewport meta`);
                } else {
                    throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π viewport');
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏
                if (html.includes('media') || html.includes('@media')) {
                    this.logSuccess(`üìê ${page} –∏–º–µ–µ—Ç –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å—ã`);
                }
                
            } catch (error) {
                this.logError(`‚ùå ${page}: ${error.message}`);
            }
        }
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    async testSecurity() {
        console.log('\nüîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
        
        try {
            const response = await this.makeRequest(this.baseUrl);
            const html = response.data;
            const headers = response.headers;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTPS
            if (this.baseUrl.startsWith('https://')) {
                this.logSuccess('üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS');
            } else {
                this.logWarning('‚ö†Ô∏è –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç XSS
            if (html.includes('CSP') || headers['content-security-policy']) {
                this.logSuccess('üõ°Ô∏è CSP –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            if (html.includes('X-Frame-Options') || html.includes('X-Content-Type-Options')) {
                this.logSuccess('üîí –ú–µ—Ç–∞-—Ç–µ–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã');
            }
            
        } catch (error) {
            this.logError(`‚ùå –¢–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${error.message}`);
        }
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SEO
    async testSEO() {
        console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SEO...');
        
        const pages = [
            { path: '/', title: '–ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞' },
            { path: '/restaurants.html', title: '–†–µ—Å—Ç–æ—Ä–∞–Ω–∞–º' },
            { path: '/gifts.html', title: '–ü–æ–¥–∞—Ä–∫–∏' },
            { path: '/investment-model.html', title: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å' },
            { path: '/development.html', title: '–†–∞–∑–≤–∏—Ç–∏–µ' },
            { path: '/breeding.html', title: '–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å' },
            { path: '/logistics.html', title: '–õ–æ–≥–∏—Å—Ç–∏–∫–∞' },
            { path: '/contacts.html', title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã' }
        ];
        
        for (const page of pages) {
            try {
                const response = await this.makeRequest(`${this.baseUrl}${page.path}`);
                const html = response.data;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º title
                if (html.includes(`<title>`) && html.includes(page.title)) {
                    this.logSuccess(`üìÑ ${page.path} –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π title`);
                } else {
                    throw new Error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π title`);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º description
                if (html.includes('name="description"') && html.includes('content=')) {
                    this.logSuccess(`üìù ${page.path} –∏–º–µ–µ—Ç description`);
                } else {
                    this.logWarning(`‚ö†Ô∏è ${page.path} –Ω–µ –∏–º–µ–µ—Ç description`);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º H1
                if (html.includes('<h1')) {
                    this.logSuccess(`üî§ ${page.path} –∏–º–µ–µ—Ç H1`);
                } else {
                    this.logWarning(`‚ö†Ô∏è ${page.path} –Ω–µ –∏–º–µ–µ—Ç H1`);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                if (html.includes('application/ld+json') || html.includes('schema.org')) {
                    this.logSuccess(`üìä ${page.path} –∏–º–µ–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
                }
                
            } catch (error) {
                this.logError(`‚ùå ${page.path}: ${error.message}`);
            }
        }
    }

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JavaScript
    async testJavaScript() {
        console.log('\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JavaScript...');
        
        const scripts = [
            '/scripts/analytics.js',
            '/scripts/social-integration.js',
            '/scripts/catalog-preview.js'
        ];
        
        for (const script of scripts) {
            try {
                const response = await this.makeRequest(`${this.baseUrl}${script}`);
                
                if (response.statusCode === 200) {
                    this.logSuccess(`üìú ${script} –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è`);
                    
                    // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
                    const js = response.data;
                    if (js.includes('function') || js.includes('=>') || js.includes('const')) {
                        this.logSuccess(`‚úÖ ${script} —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–π JS`);
                    }
                } else {
                    throw new Error(`HTTP ${response.statusCode}`);
                }
                
            } catch (error) {
                this.logError(`‚ùå ${script}: ${error.message}`);
            }
        }
    }

    // –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    makeRequest(url) {
        return new Promise((resolve, reject) => {
            const request = https.get(url, (response) => {
                let data = '';
                
                response.on('data', (chunk) => {
                    data += chunk;
                });
                
                response.on('end', () => {
                    resolve({
                        statusCode: response.statusCode,
                        statusMessage: response.statusMessage,
                        headers: response.headers,
                        data: data
                    });
                });
            });
            
            request.on('error', (error) => {
                reject(error);
            });
            
            request.setTimeout(10000, () => {
                request.destroy();
                reject(new Error('–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞'));
            });
        });
    }

    logSuccess(message) {
        console.log(message);
        this.results.passed++;
        this.results.total++;
    }

    logError(message) {
        console.log(message);
        this.results.failed++;
        this.results.total++;
        this.results.errors.push(message);
    }

    logWarning(message) {
        console.log(message);
        this.results.total++;
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    async runAllTests() {
        console.log('üöÄ –ó–ê–ü–£–°–ö –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ê–ô–¢–ê');
        console.log('=' + '='.repeat(60));
        console.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π —Å–∞–π—Ç: ${this.baseUrl}`);
        console.log('=' + '='.repeat(60));

        const startTime = Date.now();

        // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü
        console.log('\nüìÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü...');
        const pages = [
            { path: '/', title: '–ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞' },
            { path: '/restaurants.html', title: '–†–µ—Å—Ç–æ—Ä–∞–Ω–∞–º' },
            { path: '/gifts.html', title: '–ü–æ–¥–∞—Ä–∫–∏' },
            { path: '/investment-model.html', title: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å' },
            { path: '/development.html', title: '–†–∞–∑–≤–∏—Ç–∏–µ' },
            { path: '/breeding.html', title: '–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å' },
            { path: '/logistics.html', title: '–õ–æ–≥–∏—Å—Ç–∏–∫–∞' },
            { path: '/contacts.html', title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã' }
        ];

        for (const page of pages) {
            await this.testPageAccess(page.path, page.title);
        }

        // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        await this.testForms();
        await this.testPerformance();
        await this.testMobileResponsiveness();
        await this.testSecurity();
        await this.testSEO();
        await this.testJavaScript();

        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const totalTime = Date.now() - startTime;
        
        console.log('\n' + '='.repeat(60));
        console.log('üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
        console.log('=' + '='.repeat(60));
        console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${totalTime}–º—Å`);
        console.log(`üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${this.results.total}`);
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${this.results.passed}`);
        console.log(`‚ùå –ù–µ—É–¥–∞—á–Ω–æ: ${this.results.failed}`);
        console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${((this.results.passed / this.results.total) * 100).toFixed(1)}%`);

        if (this.results.errors.length > 0) {
            console.log('\n‚ùå –ù–ê–ô–î–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
            this.results.errors.forEach((error, index) => {
                console.log(`${index + 1}. ${error}`);
            });
        }

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
        await this.saveReport();

        console.log('\n' + '='.repeat(60));
        if (this.results.failed === 0) {
            console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
        } else {
            console.log('‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´, –¢–†–ï–ë–£–Æ–©–ò–ï –í–ù–ò–ú–ê–ù–ò–Ø');
        }
        console.log('=' + '='.repeat(60));
    }

    async saveReport() {
        const report = {
            timestamp: new Date().toISOString(),
            baseUrl: this.baseUrl,
            results: this.results,
            summary: {
                status: this.results.failed === 0 ? 'PASSED' : 'FAILED',
                successRate: `${((this.results.passed / this.results.total) * 100).toFixed(1)}%`
            }
        };

        try {
            await fs.writeFile('test-report.json', JSON.stringify(report, null, 2));
            console.log('\nüíæ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ test-report.json');
        } catch (error) {
            console.log(`\n‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á—ë—Ç–∞: ${error.message}`);
        }
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
    const tester = new QuickTester();
    tester.runAllTests().catch(console.error);
}

module.exports = QuickTester;