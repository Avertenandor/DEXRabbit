const { test, expect } = require('@playwright/test');
const {
  humanPause,
  openMobileMenu,
  openDropdown,
  clickDropdownLink,
  verifyPage,
  readPageContent,
  goBack,
  fullPageCheck,
  clickExternalLink
} = require('../helpers/user-actions');

/**
 * –ü–†–û–ú–´–®–õ–ï–ù–ù–´–ô –¢–ï–°–¢: –ü–£–¢–¨ –ü–û–ö–£–ü–ê–¢–ï–õ–Ø –ö–†–û–õ–ò–ö–û–í
 * 
 * –°—Ü–µ–Ω–∞—Ä–∏–π:
 * 1. –ó–∞—Ö–æ–¥–∏—Ç –Ω–∞ —Å–∞–π—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –ø–æ–∫—É–ø–∫–æ–π
 * 2. –ò–∑—É—á–∞–µ—Ç —É—Å–ª—É–≥–∏: –ü–æ–∫—É–ø–∫–∞ –∫—Ä–æ–ª–∏–∫–æ–≤
 * 3. –°–º–æ—Ç—Ä–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Ä–æ–¥—ã
 * 4. –ß–∏—Ç–∞–µ—Ç –æ–± —É—Ö–æ–¥–µ –∑–∞ –∫—Ä–æ–ª–∏–∫–∞–º–∏
 * 5. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É
 * 6. –°–≤—è–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –±–æ—Ç
 */

test.describe('–ü–†–û–ú–´–®–õ–ï–ù–ù–´–ô –¢–ï–°–¢: –ü—É—Ç—å –ü–æ–∫—É–ø–∞—Ç–µ–ª—è', () => {
  
  test('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: –æ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–∞ –¥–æ –ø–æ–∫—É–ø–∫–∏', async ({ page }) => {
    console.log('\nüê∞ –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ê: –ü–£–¢–¨ –ü–û–ö–£–ü–ê–¢–ï–õ–Ø –ö–†–û–õ–ò–ö–û–í\n');
    
    // ========== –®–ê–ì 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ==========
    console.log('üìç –®–ê–ì 1: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π, –æ—Å–º–æ—Ç—Ä');
    await page.goto('/');
    await page.waitForLoadState('networkidle');
    await fullPageCheck(page, '–ì–ª–∞–≤–Ω–∞—è (–ü–æ–∫—É–ø–∞—Ç–µ–ª—å)');
    await humanPause(2000);
    
    // ========== –®–ê–ì 2: –ú–µ–Ω—é ‚Üí –£—Å–ª—É–≥–∏ ==========
    console.log('\nüìç –®–ê–ì 2: –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –£—Å–ª—É–≥–∏');
    await openMobileMenu(page);
    await openDropdown(page, '–£—Å–ª—É–≥–∏');
    await humanPause(1500);
    
    // ========== –®–ê–ì 3: –ü–æ–∫—É–ø–∫–∞ –∫—Ä–æ–ª–∏–∫–æ–≤ ==========
    console.log('\nüìç –®–ê–ì 3: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ü–æ–∫—É–ø–∫–∞ –∫—Ä–æ–ª–∏–∫–æ–≤');
    await clickDropdownLink(page, '–ü–æ–∫—É–ø–∫–∞ –∫—Ä–æ–ª–∏–∫–æ–≤');
    await verifyPage(page, '/my-rabbit-breeder.html');
    await fullPageCheck(page, '–ü–æ–∫—É–ø–∫–∞ –∫—Ä–æ–ª–∏–∫–æ–≤');
    await readPageContent(page, 3000);
    
    // ========== –®–ê–ì 4: –í–æ–∑–≤—Ä–∞—Ç, –∏–∑—É—á–µ–Ω–∏–µ –ø–æ—Ä–æ–¥ ==========
    console.log('\nüìç –®–ê–ì 4: –í–æ–∑–≤—Ä–∞—Ç –∏ –∏–∑—É—á–µ–Ω–∏–µ –ø–æ—Ä–æ–¥');
    await goBack(page);
    await humanPause(1000);
    await openMobileMenu(page);
    await openDropdown(page, '–ü–æ—Ä–æ–¥—ã');
    await humanPause(1500);
    
    // ========== –®–ê–ì 5: –ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å ==========
    console.log('\nüìç –®–ê–ì 5: –ò–∑—É—á–µ–Ω–∏–µ –ü–ª–µ–º–µ–Ω–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏');
    await clickDropdownLink(page, '–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å');
    await verifyPage(page, '/breeding-value.html');
    await fullPageCheck(page, '–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å');
    await readPageContent(page, 2500);
    
    // ========== –®–ê–ì 6: –ö—Ä–æ–ª–∏–∫–∏ vs –ó–∞–π—Ü—ã ==========
    console.log('\nüìç –®–ê–ì 6: –ö—Ä–æ–ª–∏–∫–∏ vs –ó–∞–π—Ü—ã');
    await goBack(page);
    await openMobileMenu(page);
    await openDropdown(page, '–ü–æ—Ä–æ–¥—ã');
    await clickDropdownLink(page, '–ö—Ä–æ–ª–∏–∫–∏ vs –ó–∞–π—Ü—ã');
    await verifyPage(page, '/rabbits-hares.html');
    await fullPageCheck(page, '–ö—Ä–æ–ª–∏–∫–∏ vs –ó–∞–π—Ü—ã');
    await readPageContent(page, 2000);
    
    // ========== –®–ê–ì 7: –£—Ö–æ–¥ ==========
    console.log('\nüìç –®–ê–ì 7: –ò–∑—É—á–µ–Ω–∏–µ —É—Ö–æ–¥–∞ –∑–∞ –∫—Ä–æ–ª–∏–∫–∞–º–∏');
    await goBack(page);
    await openMobileMenu(page);
    await openDropdown(page, '–ü–æ—Ä–æ–¥—ã');
    await clickDropdownLink(page, '–£—Ö–æ–¥');
    await verifyPage(page, '/care.html');
    await fullPageCheck(page, '–£—Ö–æ–¥');
    await readPageContent(page, 3000); // –î–æ–ª–≥–æ —á–∏—Ç–∞–µ–º –ø—Ä–æ —É—Ö–æ–¥
    
    // ========== –®–ê–ì 8: –î–æ—Å—Ç–∞–≤–∫–∞ ==========
    console.log('\nüìç –®–ê–ì 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏');
    await goBack(page);
    await openMobileMenu(page);
    await openDropdown(page, '–£—Å–ª—É–≥–∏');
    await clickDropdownLink(page, '–î–æ—Å—Ç–∞–≤–∫–∞');
    await verifyPage(page, '/logistics.html');
    await fullPageCheck(page, '–î–æ—Å—Ç–∞–≤–∫–∞');
    await readPageContent(page, 2500);
    
    // ========== –®–ê–ì 9: –ö–æ–Ω—Ç–∞–∫—Ç —á–µ—Ä–µ–∑ –±–æ—Ç ==========
    console.log('\nüìç –®–ê–ì 9: –°–≤—è–∑—å —á–µ—Ä–µ–∑ Telegram –±–æ—Ç');
    const botLink = await clickExternalLink(page, '–û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç');
    expect(botLink).toContain('t.me');
    
    console.log('\n‚úÖ –ü–£–¢–¨ –ü–û–ö–£–ü–ê–¢–ï–õ–Ø –ó–ê–í–ï–†–®–ï–ù');
    console.log('üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ!');
  });
  
  test('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ—Ä–æ–¥', async ({ page }) => {
    console.log('\nüê∞ –¢–ï–°–¢: –°–†–ê–í–ù–ï–ù–ò–ï –í–°–ï–• –ü–û–†–û–î\n');
    
    await page.goto('/');
    await page.waitForLoadState('networkidle');
    await humanPause(1000);
    
    await openMobileMenu(page);
    await openDropdown(page, '–ü–æ—Ä–æ–¥—ã');
    
    const breedPages = [
      { text: '–ü–ª–µ–º–µ–Ω–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å', url: '/breeding-value.html' },
      { text: '–ö—Ä–æ–ª–∏–∫–∏ vs –ó–∞–π—Ü—ã', url: '/rabbits-hares.html' },
      { text: '–ö—Ä–æ–ª–∏–∫–∏ vs –ö–æ—Ç—ã', url: '/cats-rabbits.html' },
      { text: '–£—Ö–æ–¥', url: '/care.html' }
    ];
    
    for (const breed of breedPages) {
      console.log(`\nüêá –ò–∑—É—á–∞–µ–º: ${breed.text}`);
      
      if (breedPages.indexOf(breed) > 0) {
        await page.goto('/');
        await page.waitForLoadState('networkidle');
        await openMobileMenu(page);
        await openDropdown(page, '–ü–æ—Ä–æ–¥—ã');
      }
      
      await clickDropdownLink(page, breed.text);
      await verifyPage(page, breed.url);
      await readPageContent(page, 2000);
      await fullPageCheck(page, breed.text);
    }
    
    console.log('\n‚úÖ –í–°–ï –ü–û–†–û–î–´ –ò–ó–£–ß–ï–ù–´');
  });
});
