/**
 * üéØ E2E USER JOURNEY TESTS - –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 
 * –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ö–æ–¥–∏—Ç –Ω–∞ —Å–∞–π—Ç —Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é
 * 
 * –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:
 * - iPhone 12 (390x844)
 * - iPhone SE (375x667)
 * - Samsung Galaxy S21 (360x800)
 * - iPad Mini (768x1024)
 */

import { test, expect } from '@playwright/test';

// –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const PAGES = [
  { name: '–ì–ª–∞–≤–Ω–∞—è', url: '/', dropdown: null },
  { name: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', url: '/investment/', dropdown: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏' },
  { name: '–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ', url: '/partners/', dropdown: '–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ' },
  { name: '–î–æ—Å—Ç–∞–≤–∫–∞', url: '/delivery/', dropdown: '–£—Å–ª—É–≥–∏' },
  { name: '–ö–∞—Ç–∞–ª–æ–≥', url: '/catalog/', dropdown: '–ü–æ—Ä–æ–¥—ã' },
  { name: '–ì–∞–ª–µ—Ä–µ—è', url: '/gallery/', dropdown: '–ü–æ—Ä–æ–¥—ã' },
  { name: '–†–∞–∑–≤–µ–¥–µ–Ω–∏–µ', url: '/breeding/', dropdown: '–ü–æ—Ä–æ–¥—ã' },
  { name: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', url: '/contacts/', dropdown: '–û –Ω–∞—Å' },
  { name: 'FAQ', url: '/faq/', dropdown: '–û –Ω–∞—Å' },
  { name: '–ë–ª–æ–≥', url: '/blog/', dropdown: '–û –Ω–∞—Å' },
];

test.describe('üéØ E2E: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º', () => {
  
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  PAGES.forEach((page) => {
    
    test(`üì± ${page.name}: –û—Ç–∫—Ä—ã—Ç—å –±—É—Ä–≥–µ—Ä ‚Üí –ù–∞–≤–∏–≥–∞—Ü–∏—è ‚Üí –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ ‚Üí –í–æ–∑–≤—Ä–∞—Ç`, async ({ page: browser }) => {
      console.log(`\n${'='.repeat(70)}`);
      console.log(`üì± –¢–ï–°–¢–ò–†–£–ï–ú –°–¢–†–ê–ù–ò–¶–£: ${page.name}`);
      console.log(`   URL: ${page.url}`);
      console.log(`   Dropdown: ${page.dropdown || '–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞'}`);
      console.log('='.repeat(70));
      
      // 1Ô∏è‚É£ –û–¢–ö–†–´–í–ê–ï–ú –°–¢–†–ê–ù–ò–¶–£
      console.log('\n1Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
      const baseUrl = 'https://xn--80apagbbfxgmuj4j.site';
      await browser.goto(baseUrl + page.url, { waitUntil: 'networkidle' });
      await browser.waitForTimeout(1000);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
      const title = await browser.title();
      console.log(`   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: "${title}"`);
      
      // 2Ô∏è‚É£ –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –ë–£–†–ì–ï–† –í–ò–î–ò–ú –ò –ö–õ–ò–ö–ê–ë–ï–õ–ï–ù
      console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—É—Ä–≥–µ—Ä –º–µ–Ω—é...');
      const burger = browser.locator('.nav-beautiful__mobile-toggle');
      await expect(burger).toBeVisible({ timeout: 5000 });
      await expect(burger).toBeEnabled();
      console.log('   ‚úÖ –ë—É—Ä–≥–µ—Ä –º–µ–Ω—é –≤–∏–¥–∏–º–æ –∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ');
      
      // 3Ô∏è‚É£ –û–¢–ö–†–´–í–ê–ï–ú –ë–£–†–ì–ï–† –ú–ï–ù–Æ
      console.log('\n3Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—É—Ä–≥–µ—Ä –º–µ–Ω—é...');
      await burger.click();
      await browser.waitForTimeout(800); // –ê–Ω–∏–º–∞—Ü–∏—è
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–µ–Ω—é –æ—Ç–∫—Ä—ã–ª–æ—Å—å
      const nav = browser.locator('.nav-beautiful');
      const isOpen = await nav.evaluate(el => el.classList.contains('open'));
      expect(isOpen).toBe(true);
      console.log('   ‚úÖ –ú–µ–Ω—é –æ—Ç–∫—Ä—ã–ª–æ—Å—å');
      
      // 4Ô∏è‚É£ –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –í–°–ï –ü–£–ù–ö–¢–´ –ú–ï–ù–Æ –í–ò–î–ù–´
      console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é...');
      const menuItems = await browser.locator('.nav-beautiful__dropdown-wrapper').count();
      console.log(`   –ù–∞–π–¥–µ–Ω–æ dropdown —Ä–∞–∑–¥–µ–ª–æ–≤: ${menuItems}`);
      expect(menuItems).toBeGreaterThan(0);
      console.log('   ‚úÖ –í—Å–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –≤–∏–¥–Ω—ã');
      
      // 5Ô∏è‚É£ –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –ù–ï–¢ HORIZONTAL SCROLL
      console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª...');
      const bodyScrollWidth = await browser.evaluate(() => document.body.scrollWidth);
      const windowWidth = await browser.evaluate(() => window.innerWidth);
      
      console.log(`   Body scrollWidth: ${bodyScrollWidth}px`);
      console.log(`   Window width: ${windowWidth}px`);
      
      if (bodyScrollWidth > windowWidth) {
        console.log(`   ‚ùå –ì–û–†–ò–ó–û–ù–¢–ê–õ–¨–ù–´–ô –°–ö–†–û–õ–õ! –†–∞–∑–Ω–∏—Ü–∞: ${bodyScrollWidth - windowWidth}px`);
      } else {
        console.log('   ‚úÖ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ –Ω–µ—Ç');
      }
      
      expect(bodyScrollWidth).toBeLessThanOrEqual(windowWidth + 5); // +5px –¥–æ–ø—É—Å–∫
      
      // 6Ô∏è‚É£ –ó–ê–ö–†–´–í–ê–ï–ú –ú–ï–ù–Æ
      console.log('\n6Ô∏è‚É£ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é...');
      await burger.click();
      await browser.waitForTimeout(800);
      
      const isOpenAfterClose = await nav.evaluate(el => el.classList.contains('open'));
      expect(isOpenAfterClose).toBe(false);
      console.log('   ‚úÖ –ú–µ–Ω—é –∑–∞–∫—Ä—ã–ª–æ—Å—å');
      
      // 7Ô∏è‚É£ –ü–†–û–ö–†–£–ß–ò–í–ê–ï–ú –°–¢–†–ê–ù–ò–¶–£ –í–ù–ò–ó
      console.log('\n7Ô∏è‚É£ –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑...');
      const pageHeight = await browser.evaluate(() => document.body.scrollHeight);
      await browser.evaluate(() => window.scrollTo(0, document.body.scrollHeight));
      await browser.waitForTimeout(500);
      
      const scrollY = await browser.evaluate(() => window.scrollY);
      console.log(`   –í—ã—Å–æ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageHeight}px`);
      console.log(`   –ü—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ –Ω–∞: ${scrollY}px`);
      console.log('   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–∫—Ä—É—á–µ–Ω–∞');
      
      // 8Ô∏è‚É£ –ü–†–û–ö–†–£–ß–ò–í–ê–ï–ú –û–ë–†–ê–¢–ù–û –í–í–ï–†–•
      console.log('\n8Ô∏è‚É£ –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤–≤–µ—Ä—Ö...');
      await browser.evaluate(() => window.scrollTo(0, 0));
      await browser.waitForTimeout(500);
      
      const scrollYAfter = await browser.evaluate(() => window.scrollY);
      expect(scrollYAfter).toBeLessThan(100);
      console.log('   ‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–≤–µ—Ä—Ö');
      
      // 9Ô∏è‚É£ –°–ù–û–í–ê –û–¢–ö–†–´–í–ê–ï–ú –ú–ï–ù–Æ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞)
      console.log('\n9Ô∏è‚É£ –°–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞...');
      await burger.click();
      await browser.waitForTimeout(800);
      
      const isOpenAgain = await nav.evaluate(el => el.classList.contains('open'));
      expect(isOpenAgain).toBe(true);
      console.log('   ‚úÖ –ú–µ–Ω—é —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞');
      
      // üîü –ó–ê–ö–†–´–í–ê–ï–ú –°–ù–û–í–ê
      console.log('\nüîü –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —Ñ–∏–Ω–∞–ª—å–Ω–æ...');
      await burger.click();
      await browser.waitForTimeout(800);
      console.log('   ‚úÖ –ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ');
      
      // ‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
      console.log(`\n‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –î–õ–Ø "${page.name}" –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!\n`);
    });
  });
});

test.describe('üéØ E2E: –ù–∞–≤–∏–≥–∞—Ü–∏—è –ß–ï–†–ï–ó dropdown –º–µ–Ω—é', () => {
  
  test('üì± –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: –ì–ª–∞–≤–Ω–∞—è ‚Üí –ö–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª —á–µ—Ä–µ–∑ dropdown', async ({ page: browser }) => {
    console.log('\n' + '='.repeat(70));
    console.log('üéØ –ü–û–õ–ù–´–ô –ü–£–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: –ù–∞–≤–∏–≥–∞—Ü–∏—è —á–µ—Ä–µ–∑ –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã');
    console.log('='.repeat(70));
    
    const baseUrl = 'https://xn--80apagbbfxgmuj4j.site';
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å –≥–ª–∞–≤–Ω–æ–π
    await browser.goto(baseUrl, { waitUntil: 'networkidle' });
    await browser.waitForTimeout(1000);
    console.log('\n‚úÖ –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –ì–ª–∞–≤–Ω–∞—è');
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ dropdown
    const dropdownGroups = {
      '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏': ['/investment/'],
      '–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ': ['/partners/'],
      '–£—Å–ª—É–≥–∏': ['/delivery/'],
      '–ü–æ—Ä–æ–¥—ã': ['/catalog/', '/gallery/', '/breeding/'],
      '–û –Ω–∞—Å': ['/contacts/', '/faq/', '/blog/']
    };
    
    let testNumber = 1;
    
    for (const [dropdownName, urls] of Object.entries(dropdownGroups)) {
      console.log(`\n${'‚îÄ'.repeat(70)}`);
      console.log(`üìÇ –†–ê–ó–î–ï–õ: ${dropdownName}`);
      console.log('‚îÄ'.repeat(70));
      
      for (const url of urls) {
        console.log(`\n${testNumber++}Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º: ${url}`);
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—É—Ä–≥–µ—Ä
        const burger = browser.locator('.nav-beautiful__mobile-toggle');
        await burger.click();
        await browser.waitForTimeout(800);
        console.log('   ‚úÖ –ë—É—Ä–≥–µ—Ä –æ—Ç–∫—Ä—ã—Ç');
        
        // –ù–∞—Ö–æ–¥–∏–º dropdown –ø–æ –∏–º–µ–Ω–∏
        const dropdownWrappers = browser.locator('.nav-beautiful__dropdown-wrapper');
        const count = await dropdownWrappers.count();
        
        let clicked = false;
        for (let i = 0; i < count; i++) {
          const wrapper = dropdownWrappers.nth(i);
          const button = wrapper.locator('.nav-beautiful__btn');
          const buttonText = await button.innerText();
          
          if (buttonText.includes(dropdownName)) {
            // –ù–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π dropdown - –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–µ–º—É –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º
            await button.scrollIntoViewIfNeeded();
            await browser.waitForTimeout(300);
            await button.click({ force: true });
            await browser.waitForTimeout(500);
            console.log(`   ‚úÖ Dropdown "${dropdownName}" –æ—Ç–∫—Ä—ã—Ç`);
            
            // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Å—ã–ª–∫—É
            const links = wrapper.locator('.nav-beautiful__dropdown-item');
            const linksCount = await links.count();
            
            for (let j = 0; j < linksCount; j++) {
              const link = links.nth(j);
              const href = await link.getAttribute('href');
              
              if (href === url) {
                await link.click({ force: true }); // FORCE –∫–ª–∏–∫
                clicked = true;
                console.log(`   ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ: ${url}`);
                break;
              }
            }
            break;
          }
        }
        
        if (!clicked) {
          console.log(`   ‚ö†Ô∏è –°—Å—ã–ª–∫–∞ ${url} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞–ø—Ä—è–º—É—é`);
          await browser.goto(baseUrl + url, { waitUntil: 'networkidle' });
        }
        
        await browser.waitForTimeout(1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
        const currentUrl = browser.url();
        console.log(`   üìç –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫
        const has404 = await browser.locator('text=/404|Not Found/i').count() > 0;
        expect(has404).toBe(false);
        
        // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
        const bodyScrollWidth = await browser.evaluate(() => document.body.scrollWidth);
        const windowWidth = await browser.evaluate(() => window.innerWidth);
        
        if (bodyScrollWidth > windowWidth) {
          console.log(`   ‚ö†Ô∏è –ì–û–†–ò–ó–û–ù–¢–ê–õ–¨–ù–´–ô –°–ö–†–û–õ–õ: ${bodyScrollWidth - windowWidth}px`);
        }
        
        console.log(`   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
      }
    }
    
    console.log('\n' + '='.repeat(70));
    console.log('‚úÖ –ü–û–õ–ù–´–ô –ü–£–¢–¨ –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û!');
    console.log('='.repeat(70) + '\n');
  });
});

test.describe('üéØ E2E: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ö–ê–ñ–î–û–ô —Å—Ç—Ä–∞–Ω–∏—Ü–µ', () => {
  
  test('üì± –ú–∞—Å—Å–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü', async ({ page: browser }) => {
    console.log('\n' + '='.repeat(70));
    console.log('üîç –ú–ê–°–°–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –°–¢–†–ê–ù–ò–¶');
    console.log('='.repeat(70));
    
    const baseUrl = 'https://xn--80apagbbfxgmuj4j.site';
    const issues = [];
    
    for (const page of PAGES) {
      console.log(`\nüìÑ ${page.name} (${page.url})`);
      
      try {
        await browser.goto(baseUrl + page.url, { waitUntil: 'networkidle', timeout: 10000 });
        await browser.waitForTimeout(500);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ë—É—Ä–≥–µ—Ä –≤–∏–¥–∏–º
        const burger = browser.locator('.nav-beautiful__mobile-toggle');
        const burgerVisible = await burger.isVisible();
        
        if (!burgerVisible) {
          issues.push({ page: page.name, issue: '–ë—É—Ä–≥–µ—Ä –Ω–µ –≤–∏–¥–µ–Ω' });
          console.log('   ‚ùå –ë—É—Ä–≥–µ—Ä –Ω–µ –≤–∏–¥–µ–Ω');
          continue;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        const bodyScrollWidth = await browser.evaluate(() => document.body.scrollWidth);
        const windowWidth = await browser.evaluate(() => window.innerWidth);
        
        if (bodyScrollWidth > windowWidth + 5) {
          issues.push({ 
            page: page.name, 
            issue: `–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª ${bodyScrollWidth - windowWidth}px` 
          });
          console.log(`   ‚ùå –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª: ${bodyScrollWidth - windowWidth}px`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ (–ª–æ–≤–∏–º —á–µ—Ä–µ–∑ CDP)
        // (–í Playwright –º–æ–∂–Ω–æ —Å–ª—É—à–∞—Ç—å console errors)
        
        console.log('   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ OK');
        
      } catch (error) {
        issues.push({ page: page.name, issue: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}` });
        console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç
    console.log('\n' + '='.repeat(70));
    console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢');
    console.log('='.repeat(70));
    
    if (issues.length === 0) {
      console.log('\n‚úÖ –í–°–ï –°–¢–†–ê–ù–ò–¶–´ –†–ê–ë–û–¢–ê–Æ–¢ –ò–î–ï–ê–õ–¨–ù–û!');
    } else {
      console.log(`\n‚ùå –ù–ê–ô–î–ï–ù–û –ü–†–û–ë–õ–ï–ú: ${issues.length}`);
      issues.forEach((issue, index) => {
        console.log(`\n${index + 1}. ${issue.page}:`);
        console.log(`   ${issue.issue}`);
      });
    }
    
    console.log('\n' + '='.repeat(70) + '\n');
    
    // Assert —á—Ç–æ –ø—Ä–æ–±–ª–µ–º –Ω–µ—Ç
    expect(issues.length).toBe(0);
  });
});
