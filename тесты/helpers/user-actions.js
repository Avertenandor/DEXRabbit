/**
 * –ü–†–û–ú–´–®–õ–ï–ù–ù–´–ï HELPERS –î–õ–Ø E2E –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
 * –≠–º—É–ª–∏—Ä—É—é—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

const { expect } = require('@playwright/test');

/**
 * –ü–∞—É–∑–∞ –∫–∞–∫ —É —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á—Ç–µ–Ω–∏–µ, —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ)
 */
async function humanPause(ms = 1000) {
  await new Promise(resolve => setTimeout(resolve, ms));
}

/**
 * –°–∫—Ä–æ–ª–ª –∫–∞–∫ —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ø–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π)
 */
async function humanScroll(page, direction = 'down', distance = 300) {
  const scrollSteps = 5;
  const stepDistance = distance / scrollSteps;
  
  for (let i = 0; i < scrollSteps; i++) {
    await page.evaluate((step) => {
      window.scrollBy({
        top: step,
        behavior: 'smooth'
      });
    }, direction === 'down' ? stepDistance : -stepDistance);
    await humanPause(200);
  }
}

/**
 * –û—Ç–∫—Ä—ã—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
 */
async function openMobileMenu(page) {
  console.log('üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é...');
  
  const mobileToggle = page.locator('.nav-beautiful__mobile-toggle');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –≤–∏–¥–Ω–∞
  await expect(mobileToggle).toBeVisible();
  
  // –ö–ª–∏–∫
  await mobileToggle.click();
  
  // –ñ–¥–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
  await humanPause(800);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–µ–Ω—é –æ—Ç–∫—Ä—ã–ª–æ—Å—å
  const menu = page.locator('.nav-beautiful__menu');
  await expect(menu).toHaveCSS('transform', 'matrix(1, 0, 0, 1, 0, 0)'); // translateX(0)
  
  console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ');
}

/**
 * –û—Ç–∫—Ä—ã—Ç—å dropdown –≤ –º–µ–Ω—é
 */
async function openDropdown(page, dropdownName) {
  console.log(`üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º dropdown: ${dropdownName}...`);
  
  // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –ø–æ —Ç–µ–∫—Å—Ç—É
  const button = page.locator('.nav-beautiful__btn', { hasText: dropdownName });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
  await expect(button).toBeVisible();
  
  // –ö–ª–∏–∫
  await button.click();
  
  // –ñ–¥–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
  await humanPause(500);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ dropdown –æ—Ç–∫—Ä—ã–ª—Å—è
  const wrapper = button.locator('xpath=..');
  const hasOpen = await wrapper.evaluate(el => el.classList.contains('open'));
  
  if (!hasOpen) {
    throw new Error(`Dropdown "${dropdownName}" –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è!`);
  }
  
  console.log(`‚úÖ Dropdown "${dropdownName}" –æ—Ç–∫—Ä—ã—Ç`);
}

/**
 * –ö–ª–∏–∫–Ω—É—Ç—å –Ω–∞ —Å—Å—ã–ª–∫—É –≤ dropdown
 */
async function clickDropdownLink(page, linkText) {
  console.log(`üîó –ö–ª–∏–∫–∞–µ–º –Ω–∞ —Å—Å—ã–ª–∫—É: ${linkText}...`);
  
  const link = page.locator('.nav-beautiful__dropdown-item', { hasText: linkText });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
  await expect(link).toBeVisible();
  
  // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ (—á—Ç–µ–Ω–∏–µ)
  await humanPause(500);
  
  // –ö–ª–∏–∫
  await link.click();
  
  // –ñ–¥–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
  await page.waitForLoadState('networkidle');
  
  console.log(`‚úÖ –ü–µ—Ä–µ—à–ª–∏ –Ω–∞: ${linkText}`);
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –º—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 */
async function verifyPage(page, expectedUrl, expectedTitle) {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${expectedUrl}...`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
  await expect(page).toHaveURL(new RegExp(expectedUrl));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º title
  if (expectedTitle) {
    await expect(page).toHaveTitle(new RegExp(expectedTitle));
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
  await expect(page.locator('body')).toBeVisible();
  
  console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: ${expectedUrl}`);
}

/**
 * –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ "–ø—Ä–æ—á–∏—Ç–∞—Ç—å" –∫–æ–Ω—Ç–µ–Ω—Ç
 */
async function readPageContent(page, pauseMs = 2000) {
  console.log('üìñ –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
  
  // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –≤–Ω–∏–∑
  await humanScroll(page, 'down', 500);
  await humanPause(pauseMs);
  
  // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –µ—â–µ
  await humanScroll(page, 'down', 500);
  await humanPause(pauseMs);
  
  // –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–≤–µ—Ä—Ö
  await humanScroll(page, 'up', 300);
  await humanPause(1000);
  
  console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–æ—á–∏—Ç–∞–Ω');
}

/**
 * –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
 */
async function goBack(page) {
  console.log('‚óÄÔ∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥...');
  
  await page.goBack();
  await page.waitForLoadState('networkidle');
  await humanPause(800);
  
  console.log('‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥');
}

/**
 * –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –∏–º–µ–Ω–µ–º
 */
async function takeScreenshot(page, name) {
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const filename = `screenshots/${name}-${timestamp}.png`;
  await page.screenshot({ path: filename, fullPage: true });
  console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: ${filename}`);
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏
 */
async function checkConsoleErrors(page) {
  const errors = [];
  
  page.on('pageerror', error => {
    errors.push(error.message);
  });
  
  page.on('console', msg => {
    if (msg.type() === 'error') {
      errors.push(msg.text());
    }
  });
  
  return errors;
}

/**
 * –û—Ç–∫—Ä—ã—Ç—å –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É (Telegram –±–æ—Ç)
 */
async function clickExternalLink(page, linkText) {
  console.log(`üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É: ${linkText}...`);
  
  const link = page.locator('a', { hasText: linkText });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ
  await expect(link).toBeVisible();
  
  // –ü–æ–ª—É—á–∞–µ–º href
  const href = await link.getAttribute('href');
  console.log(`‚úÖ –°—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: ${href}`);
  
  // –ù–µ –∫–ª–∏–∫–∞–µ–º (–Ω–µ —Ö–æ—Ç–∏–º –æ—Ç–∫—Ä—ã–≤–∞—Ç—å Telegram), –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º
  expect(href).toContain('t.me');
  
  return href;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
async function verifyPageElements(page) {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
  
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  await expect(page.locator('.nav-beautiful')).toBeVisible();
  
  // Footer (–µ—Å–ª–∏ –µ—Å—Ç—å)
  const footer = page.locator('footer');
  if (await footer.count() > 0) {
    await expect(footer).toBeVisible();
  }
  
  console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ');
}

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
async function fullPageCheck(page, pageName) {
  console.log(`\n========== –ü–†–û–í–ï–†–ö–ê –°–¢–†–ê–ù–ò–¶–´: ${pageName} ==========`);
  
  // –≠–ª–µ–º–µ–Ω—Ç—ã
  await verifyPageElements(page);
  
  // –û—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
  const errors = await checkConsoleErrors(page);
  if (errors.length > 0) {
    console.warn(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏: ${errors.length}`);
    errors.forEach(err => console.error(`  ‚ùå ${err}`));
  }
  
  // –°–∫—Ä–∏–Ω—à–æ—Ç
  await takeScreenshot(page, pageName.toLowerCase().replace(/\s/g, '-'));
  
  console.log(`========== –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: ${pageName} ==========\n`);
}

module.exports = {
  humanPause,
  humanScroll,
  openMobileMenu,
  openDropdown,
  clickDropdownLink,
  verifyPage,
  readPageContent,
  goBack,
  takeScreenshot,
  checkConsoleErrors,
  clickExternalLink,
  verifyPageElements,
  fullPageCheck
};
