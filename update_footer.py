# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è footer –Ω–∞ –≤—Å–µ—Ö HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö —Å–∞–π—Ç–∞ DEXRabbit
"""

import os
import re
from pathlib import Path

# –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
PROJECT_DIR = Path(r"C:\Users\konfu\Desktop\–ö—Ä–æ–ª–∏–∫–∏")
TEMPLATE_FILE = PROJECT_DIR / "templates" / "footer-template.html"

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
HTML_FILES = [
    "index.html",
    "breeding.html",
    "care.html",
    "careers.html",
    "cats-rabbits.html",
    "contacts.html",
    "development.html",
    "gifts.html",
    "guarantees.html",
    "investment-model.html",
    "investors.html",
    "logistics.html",
    "partnership.html",
    "rabbits-hares.html",
    "reports.html",
    "restaurants.html",
    "therapy.html",
    "wallet-instructions.html",
]

def read_file(filepath):
    """–ß–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8"""
    with open(filepath, 'r', encoding='utf-8') as f:
        return f.read()

def write_file(filepath, content):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8"""
    with open(filepath, 'w', encoding='utf-8', newline='\n') as f:
        f.write(content)

def find_footer_section(content):
    """–ù–∞—Ö–æ–¥–∏—Ç —Å–µ–∫—Ü–∏—é footer –≤ HTML"""
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ footer
    pattern = r'(?s)<!-- Footer -->.*?</footer>'
    match = re.search(pattern, content)
    return match

def update_footer(html_file):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç footer –≤ HTML —Ñ–∞–π–ª–µ"""
    filepath = PROJECT_DIR / html_file
    
    if not filepath.exists():
        print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {html_file}")
        return False
    
    try:
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        content = read_file(filepath)
        template = read_file(TEMPLATE_FILE)
        
        # –ò—â–µ–º footer
        match = find_footer_section(content)
        
        if match:
            # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π footer –Ω–∞ –Ω–æ–≤—ã–π
            new_content = content[:match.start()] + template + content[match.end():]
            write_file(filepath, new_content)
            print(f"‚úÖ {html_file}: Footer –æ–±–Ω–æ–≤–ª–µ–Ω")
            return True
        else:
            # –ï—Å–ª–∏ footer –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ </body>
            if '</body>' in content:
                new_content = content.replace('</body>', f'{template}\n</body>')
                write_file(filepath, new_content)
                print(f"‚úÖ {html_file}: Footer –¥–æ–±–∞–≤–ª–µ–Ω –ø–µ—Ä–µ–¥ </body>")
                return True
            else:
                print(f"‚ùå {html_file}: –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–µ–≥ </body>")
                return False
                
    except Exception as e:
        print(f"‚ùå {html_file}: –û—à–∏–±–∫–∞ - {str(e)}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üê∞ DEXRabbit - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ footer –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö\n")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–∞
    if not TEMPLATE_FILE.exists():
        print(f"‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {TEMPLATE_FILE}")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    success_count = 0
    error_count = 0
    
    for html_file in HTML_FILES:
        if update_footer(html_file):
            success_count += 1
        else:
            error_count += 1
    
    print("=" * 60)
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {success_count} —Ñ–∞–π–ª–æ–≤")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"\nüéâ –ì–æ—Ç–æ–≤–æ!\n")

if __name__ == "__main__":
    main()
