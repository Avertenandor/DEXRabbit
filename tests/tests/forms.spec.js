import { test, expect } from '@playwright/test';

const BASE_URL = 'https://xn--80apagbbfxgmuj4j.site';

test.describe('üìù Forms Testing', () => {
  
  test('üè† Main Page Contact Form', async ({ page }) => {
    await page.goto(`${BASE_URL}/`);
    
    // –ò—â–µ–º —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
    const contactForm = page.locator('form[name="contact"], .contact-form form, #contact-form').first();
    
    if (await contactForm.count() > 0) {
      // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
      await contactForm.locator('input[name="name"], input[placeholder*="–∏–º—è"]').first().fill('–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
      await contactForm.locator('input[name="phone"], input[type="tel"]').first().fill('+7 999 123 45 67');
      await contactForm.locator('textarea, input[name="message"]').first().fill('–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º—ã');
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      const submitBtn = contactForm.locator('button[type="submit"], input[type="submit"]').first();
      await expect(submitBtn).toBeEnabled();
      
      console.log('‚úÖ Main page contact form is working');
    }
  });
  
  test('üçΩÔ∏è Restaurant Partnership Form', async ({ page }) => {
    await page.goto(`${BASE_URL}/restaurants.html`);
    
    const partnerForm = page.locator('#partnership-form, .partnership-form').first();
    
    if (await partnerForm.count() > 0) {
      // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞
      await partnerForm.locator('input[name="restaurant_name"]').fill('–¢–µ—Å—Ç–æ–≤—ã–π –†–µ—Å—Ç–æ—Ä–∞–Ω');
      await partnerForm.locator('input[name="contact_person"]').fill('–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤');
      await partnerForm.locator('input[name="phone"]').fill('+7 999 123 45 67');
      await partnerForm.locator('input[name="email"]').fill('test@restaurant.ru');
      
      if (await partnerForm.locator('select[name="partnership_level"]').count() > 0) {
        await partnerForm.locator('select[name="partnership_level"]').selectOption('premium');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è
      const agreementCheckbox = partnerForm.locator('input[name="partnership_agreement"]');
      if (await agreementCheckbox.count() > 0) {
        await agreementCheckbox.check();
        expect(await agreementCheckbox.isChecked()).toBe(true);
      }
      
      console.log('‚úÖ Restaurant partnership form is working');
    }
  });
  
  test('üéÅ Gift Order Form', async ({ page }) => {
    await page.goto(`${BASE_URL}/gifts.html`);
    
    const giftForm = page.locator('#gift-form, .gift-form').first();
    
    if (await giftForm.count() > 0) {
      // –í—ã–±–æ—Ä –ø–æ–¥–∞—Ä–æ—á–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
      await giftForm.locator('select[name="gift_package"]').selectOption('premium');
      
      // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      await giftForm.locator('input[name="recipient_name"]').fill('–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞');
      await giftForm.locator('input[name="recipient_phone"]').fill('+7 999 987 65 43');
      
      // –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
      await giftForm.locator('input[name="sender_name"]').fill('–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤');
      await giftForm.locator('input[name="sender_phone"]').fill('+7 999 111 22 33');
      
      // –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
      const deliveryDateField = giftForm.locator('input[name="delivery_date"]');
      if (await deliveryDateField.count() > 0) {
        await deliveryDateField.fill('2025-10-01');
      }
      
      // –ü–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await giftForm.locator('textarea[name="message"]').fill('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!');
      
      console.log('‚úÖ Gift order form is working');
    }
  });
  
  test('üß¨ Breeding Program Form', async ({ page }) => {
    await page.goto(`${BASE_URL}/breeding.html`);
    
    const breedingForm = page.locator('#breeding-form, .breeding-form').first();
    
    if (await breedingForm.count() > 0) {
      // –í—ã–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã
      await breedingForm.locator('select[name="program_type"]').selectOption('premium');
      
      // –û–ø—ã—Ç —Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è
      await breedingForm.locator('select[name="breeding_experience"]').selectOption('intermediate');
      
      // –ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –ø–æ—Ä–æ–¥—ã
      await breedingForm.locator('select[name="interested_breeds"]').selectOption('californian');
      
      // –¶–µ–ª–∏ —Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è
      await breedingForm.locator('select[name="breeding_goals"]').selectOption('breeding');
      
      // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      await breedingForm.locator('input[name="contact_name"]').fill('–í–ª–∞–¥–∏–º–∏—Ä –ö–æ–∑–ª–æ–≤');
      await breedingForm.locator('input[name="phone"]').fill('+7 999 555 44 33');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      await breedingForm.locator('textarea[name="additional_info"]').fill('–ò–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ä–∞–∑–≤–µ–¥–µ–Ω–∏–µ–º');
      
      // –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
      const agreementCheckbox = breedingForm.locator('input[name="breeding_agreement"]');
      if (await agreementCheckbox.count() > 0) {
        await agreementCheckbox.check();
      }
      
      console.log('‚úÖ Breeding program form is working');
    }
  });
  
  test('üìû Contact Page Form', async ({ page }) => {
    await page.goto(`${BASE_URL}/contacts.html`);
    
    const contactForm = page.locator('#contact-form, .contact-form form').first();
    
    if (await contactForm.count() > 0) {
      // –í—ã–±–æ—Ä —Ç–µ–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è
      if (await contactForm.locator('select[name="subject"]').count() > 0) {
        await contactForm.locator('select[name="subject"]').selectOption('general');
      }
      
      // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      await contactForm.locator('input[name="name"]').fill('–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞');
      await contactForm.locator('input[name="email"]').fill('maria@example.com');
      await contactForm.locator('input[name="phone"]').fill('+7 999 777 88 99');
      
      // –°–æ–æ–±—â–µ–Ω–∏–µ
      await contactForm.locator('textarea[name="message"]').fill('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å –ø–æ–∫—É–ø–∫–æ–π –∫—Ä–æ–ª–∏–∫–æ–≤ –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.');
      
      // –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
      const privacyCheckbox = contactForm.locator('input[name="privacy_agreement"]');
      if (await privacyCheckbox.count() > 0) {
        await privacyCheckbox.check();
      }
      
      console.log('‚úÖ Contact page form is working');
    }
  });
  
  test('üßÆ Calculators Testing', async ({ page }) => {
    // –¢–µ—Å—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏
    await page.goto(`${BASE_URL}/investment-model.html`);
    
    const investmentCalculator = page.locator('#investment-calculator, .investment-calculator').first();
    
    if (await investmentCalculator.count() > 0) {
      // –í–≤–æ–¥ —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
      await investmentCalculator.locator('input[name="investment_amount"]').fill('100000');
      
      // –í—ã–±–æ—Ä —Å—Ä–æ–∫–∞
      await investmentCalculator.locator('select[name="investment_term"]').selectOption('12');
      
      // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—á–µ—Ç–∞
      const calculateBtn = investmentCalculator.locator('button:has-text("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"), .btn:has-text("—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å")').first();
      if (await calculateBtn.count() > 0) {
        await calculateBtn.click();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        await page.waitForTimeout(2000);
        const results = investmentCalculator.locator('.results, .calculation-results').first();
        
        if (await results.count() > 0) {
          await expect(results).toBeVisible();
        }
      }
      
      console.log('‚úÖ Investment calculator is working');
    }
    
    // –¢–µ—Å—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    await page.goto(`${BASE_URL}/logistics.html`);
    
    const deliveryCalculator = page.locator('#delivery-calculator, .delivery-calculator').first();
    
    if (await deliveryCalculator.count() > 0) {
      // –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞
      await deliveryCalculator.locator('select[name="delivery_region"], #delivery-region').selectOption('moscow');
      
      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö
      await deliveryCalculator.locator('input[name="animal_count"], #animal-count').fill('2');
      
      // –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—á–µ—Ç–∞
      const calculateBtn = deliveryCalculator.locator('#calculate-delivery, button:has-text("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å")').first();
      if (await calculateBtn.count() > 0) {
        await calculateBtn.click();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        await page.waitForTimeout(2000);
        const results = page.locator('#delivery-results, .calculator-results').first();
        
        if (await results.count() > 0) {
          await expect(results).toBeVisible();
        }
      }
      
      console.log('‚úÖ Delivery calculator is working');
    }
  });
  
  test('üîí Form Validation', async ({ page }) => {
    await page.goto(`${BASE_URL}/contacts.html`);
    
    const contactForm = page.locator('#contact-form, .contact-form form').first();
    
    if (await contactForm.count() > 0) {
      // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é —Ñ–æ—Ä–º—É
      const submitBtn = contactForm.locator('button[type="submit"]').first();
      await submitBtn.click();
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      const requiredFields = await contactForm.locator('input[required], textarea[required], select[required]').all();
      
      for (const field of requiredFields) {
        const fieldName = await field.getAttribute('name');
        console.log(`Checking validation for field: ${fieldName}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML5 –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        const isValid = await field.evaluate(el => el.checkValidity());
        expect(isValid).toBe(false);
      }
      
      // –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email
      const emailField = contactForm.locator('input[type="email"]').first();
      if (await emailField.count() > 0) {
        await emailField.fill('invalid-email');
        await submitBtn.click();
        
        const isValid = await emailField.evaluate(el => el.checkValidity());
        expect(isValid).toBe(false);
        
        // –í–≤–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ email
        await emailField.fill('valid@example.com');
        const isValidNow = await emailField.evaluate(el => el.checkValidity());
        expect(isValidNow).toBe(true);
      }
      
      // –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
      const phoneField = contactForm.locator('input[type="tel"]').first();
      if (await phoneField.count() > 0) {
        await phoneField.fill('123');
        const isValid = await phoneField.evaluate(el => el.checkValidity());
        // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ true —Ç–∞–∫ –∏ false –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        
        await phoneField.fill('+7 999 123 45 67');
      }
      
      console.log('‚úÖ Form validation is working');
    }
  });
  
  test('üö´ Anti-spam Protection', async ({ page }) => {
    await page.goto(`${BASE_URL}/contacts.html`);
    
    const contactForm = page.locator('#contact-form, .contact-form form').first();
    
    if (await contactForm.count() > 0) {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è honeypot –ø–æ–ª—è
      const honeypotField = contactForm.locator('input[name="honeypot"]');
      
      if (await honeypotField.count() > 0) {
        // Honeypot –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–∫—Ä—ã—Ç–æ
        const isVisible = await honeypotField.isVisible();
        expect(isVisible).toBe(false);
        
        console.log('‚úÖ Honeypot anti-spam protection is active');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting (–µ—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω)
      // –ë—ã—Å—Ç—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ä–º
      for (let i = 0; i < 3; i++) {
        await contactForm.locator('input[name="name"]').fill(`Test User ${i}`);
        await contactForm.locator('input[name="email"]').fill(`test${i}@example.com`);
        await contactForm.locator('textarea[name="message"]').fill(`Test message ${i}`);
        
        const submitBtn = contactForm.locator('button[type="submit"]').first();
        if (await submitBtn.isEnabled()) {
          // –ù–µ –∫–ª–∏–∫–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞
          console.log(`Form ${i + 1} ready for submission`);
        }
        
        await page.waitForTimeout(500);
      }
      
      console.log('‚úÖ Anti-spam checks completed');
    }
  });
});