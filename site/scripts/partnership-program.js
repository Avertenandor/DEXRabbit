// –ú–æ–¥—É–ª—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
class PartnershipProgram {
    constructor() {
        this.partnerTypes = {
            'referrer': {
                name: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä',
                commission: 0.05, // 5% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
                bonusCommission: 0.02, // 2% —Å –ø—Ä–∏–±—ã–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
                requirements: { referrals: 1 },
                benefits: ['5% –∫–æ–º–∏—Å—Å–∏—è', '–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏']
            },
            'influencer': {
                name: '–ò–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä',
                commission: 0.08, // 8% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
                bonusCommission: 0.03, // 3% —Å –ø—Ä–∏–±—ã–ª–∏
                requirements: { referrals: 25, followers: 5000 },
                benefits: ['8% –∫–æ–º–∏—Å—Å–∏—è', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', '–ü—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞']
            },
            'agency': {
                name: '–ê–≥–µ–Ω—Ç—Å–∫–∏–π –ø–∞—Ä—Ç–Ω—ë—Ä',
                commission: 0.12, // 12% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
                bonusCommission: 0.05, // 5% —Å –ø—Ä–∏–±—ã–ª–∏
                requirements: { referrals: 100, monthlyVolume: 50000 },
                benefits: ['12% –∫–æ–º–∏—Å—Å–∏—è', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä', '–ë–µ–ª–∞—è –º–µ—Ç–∫–∞', 'API-–¥–æ—Å—Ç—É–ø']
            },
            'corporate': {
                name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä',
                commission: 0.15, // 15% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
                bonusCommission: 0.08, // 8% —Å –ø—Ä–∏–±—ã–ª–∏
                requirements: { monthlyVolume: 200000 },
                benefits: ['15% –∫–æ–º–∏—Å—Å–∏—è', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è', '–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è']
            }
        };
        
        this.referralTiers = {
            'bronze': { minReferrals: 1, bonusRate: 1.0, title: '–ë—Ä–æ–Ω–∑–æ–≤—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä' },
            'silver': { minReferrals: 10, bonusRate: 1.2, title: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä' },
            'gold': { minReferrals: 50, bonusRate: 1.5, title: '–ó–æ–ª–æ—Ç–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä' },
            'platinum': { minReferrals: 100, bonusRate: 2.0, title: '–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä' },
            'diamond': { minReferrals: 500, bonusRate: 3.0, title: '–ê–ª–º–∞–∑–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä' }
        };
        
        this.partners = {};
        this.referralCodes = {};
        this.partnerStats = {};
        
        this.init();
    }

    init() {
        this.loadPartnerData();
        this.initializeTracking();
        this.renderPartnerDashboard();
        this.startCommissionCalculation();
        console.log('ü§ù Partnership program initialized');
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
    generateReferralCode(userId, customCode = null) {
        if (customCode && !this.referralCodes[customCode]) {
            this.referralCodes[customCode] = userId;
            return customCode;
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥
        let code;
        do {
            code = 'REF' + userId.toString().slice(-4) + 
                   Math.random().toString(36).substr(2, 4).toUpperCase();
        } while (this.referralCodes[code]);
        
        this.referralCodes[code] = userId;
        return code;
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞
    async registerPartner(userId, type = 'referrer', data = {}) {
        const partnerConfig = this.partnerTypes[type];
        if (!partnerConfig) {
            throw new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–∞—Ä—Ç–Ω—ë—Ä–∞');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
        const meetsRequirements = await this.checkRequirements(userId, partnerConfig.requirements);
        if (!meetsRequirements.success) {
            throw new Error(`–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è: ${meetsRequirements.missing.join(', ')}`);
        }

        const partner = {
            id: userId,
            type: type,
            status: 'active',
            registrationDate: new Date().toISOString(),
            referralCode: data.customCode ? 
                this.generateReferralCode(userId, data.customCode) : 
                this.generateReferralCode(userId),
            commission: partnerConfig.commission,
            bonusCommission: partnerConfig.bonusCommission,
            tier: this.calculateTier(0),
            stats: {
                totalReferrals: 0,
                activeReferrals: 0,
                totalVolume: 0,
                totalCommissions: 0,
                monthlyVolume: 0,
                monthlyCommissions: 0
            },
            settings: {
                payoutMethod: data.payoutMethod || 'usdt',
                payoutAddress: data.payoutAddress || '',
                notifications: data.notifications || true,
                autoPayouts: data.autoPayouts || false,
                minPayout: data.minPayout || 10
            }
        };

        this.partners[userId] = partner;
        this.partnerStats[userId] = this.createStatsStructure();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        await this.notifyPartnerRegistration(partner);
        
        // –¢—Ä–µ–∫–∏–Ω–≥ —Å–æ–±—ã—Ç–∏—è
        if (window.analytics) {
            window.analytics.trackEvent('partner_registered', {
                event_category: 'partnership',
                partner_type: type,
                user_id: userId
            });
        }

        return partner;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    async processReferralRegistration(referralCode, newUserId, investmentAmount = 0) {
        const referrerId = this.referralCodes[referralCode];
        if (!referrerId) {
            return { success: false, reason: 'Invalid referral code' };
        }

        const partner = this.partners[referrerId];
        if (!partner || partner.status !== 'active') {
            return { success: false, reason: 'Partner not active' };
        }

        // –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –æ —Ä–µ—Ñ–µ—Ä–∞–ª–µ
        const referral = {
            id: newUserId,
            referrerId: referrerId,
            registrationDate: new Date().toISOString(),
            status: 'registered',
            totalInvested: investmentAmount,
            totalCommissions: 0,
            isActive: investmentAmount > 0
        };

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        partner.stats.totalReferrals++;
        if (investmentAmount > 0) {
            partner.stats.activeReferrals++;
            partner.stats.totalVolume += investmentAmount;
            partner.stats.monthlyVolume += investmentAmount;
        }

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –∫–æ–º–∏—Å—Å–∏—é
        if (investmentAmount > 0) {
            const commission = await this.calculateCommission(referrerId, investmentAmount, 'investment');
            await this.creditCommission(referrerId, commission, 'referral_investment', {
                referralId: newUserId,
                amount: investmentAmount
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º tier –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        partner.tier = this.calculateTier(partner.stats.totalReferrals);

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        await this.notifyNewReferral(referrerId, referral, investmentAmount);

        return {
            success: true,
            referral: referral,
            commission: investmentAmount > 0 ? commission : 0
        };
    }

    // –†–∞—Å—á—ë—Ç –∫–æ–º–∏—Å—Å–∏–∏
    async calculateCommission(partnerId, amount, type = 'investment') {
        const partner = this.partners[partnerId];
        if (!partner) return 0;

        let baseRate = type === 'investment' ? partner.commission : partner.bonusCommission;
        const tierMultiplier = this.referralTiers[partner.tier]?.bonusRate || 1.0;
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã
        let bonusMultiplier = 1.0;
        
        // –ë–æ–Ω—É—Å –∑–∞ –æ–±—ä—ë–º (–¥–ª—è –∞–≥–µ–Ω—Ç—Å–∫–∏—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤)
        if (partner.type === 'agency' && partner.stats.monthlyVolume > 100000) {
            bonusMultiplier += 0.1; // +10%
        }
        
        // –ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–±–æ–ª–µ–µ 20 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –≤ –º–µ—Å—è—Ü)
        if (partner.stats.monthlyReferrals > 20) {
            bonusMultiplier += 0.05; // +5%
        }
        
        const finalRate = baseRate * tierMultiplier * bonusMultiplier;
        const commission = amount * finalRate;
        
        return {
            amount: commission,
            rate: finalRate,
            baseRate: baseRate,
            tierMultiplier: tierMultiplier,
            bonusMultiplier: bonusMultiplier,
            details: {
                originalAmount: amount,
                tier: partner.tier,
                partnerType: partner.type
            }
        };
    }

    // –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏
    async creditCommission(partnerId, commission, type, metadata = {}) {
        const partner = this.partners[partnerId];
        if (!partner) return;

        const commissionRecord = {
            id: this.generateCommissionId(),
            partnerId: partnerId,
            amount: commission.amount,
            rate: commission.rate,
            type: type,
            status: 'credited',
            createdAt: new Date().toISOString(),
            metadata: metadata
        };

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        partner.stats.totalCommissions += commission.amount;
        partner.stats.monthlyCommissions += commission.amount;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –æ –∫–æ–º–∏—Å—Å–∏–∏
        if (!this.partnerStats[partnerId].commissions) {
            this.partnerStats[partnerId].commissions = [];
        }
        this.partnerStats[partnerId].commissions.push(commissionRecord);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–ø–ª–∞—Ç–∞, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
        if (partner.settings.autoPayouts && 
            partner.stats.totalCommissions >= partner.settings.minPayout) {
            await this.processAutoPayout(partnerId);
        }

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏
        await this.notifyCommissionCredited(partnerId, commission, type);

        return commissionRecord;
    }

    // –†–∞—Å—á—ë—Ç tier'–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
    calculateTier(referralCount) {
        const tiers = Object.entries(this.referralTiers)
            .sort((a, b) => b[1].minReferrals - a[1].minReferrals);
        
        for (const [tierName, tierData] of tiers) {
            if (referralCount >= tierData.minReferrals) {
                return tierName;
            }
        }
        
        return 'bronze';
    }

    // –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø–∞–Ω–µ–ª—å
    renderPartnerDashboard() {
        const dashboardContainer = document.getElementById('partner-dashboard');
        if (!dashboardContainer) return;

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–µ–º–æ)
        const currentUserId = 'demo_partner';
        const partner = this.partners[currentUserId] || this.createDemoPartner(currentUserId);
        const stats = this.partnerStats[currentUserId] || this.createStatsStructure();

        dashboardContainer.innerHTML = `
            <div class="partner-dashboard">
                <div class="dashboard-header">
                    <div class="partner-info">
                        <h2 class="partner-title">${this.partnerTypes[partner.type].name}</h2>
                        <div class="partner-tier">
                            <span class="tier-badge tier-${partner.tier}">
                                ${this.referralTiers[partner.tier].title}
                            </span>
                        </div>
                    </div>
                    <div class="partner-code">
                        <label>–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:</label>
                        <div class="code-display">
                            <input type="text" value="${partner.referralCode}" readonly>
                            <button onclick="copyReferralCode('${partner.referralCode}')" class="btn btn-outline btn-small">
                                üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                        </div>
                    </div>
                </div>

                <div class="dashboard-stats">
                    <div class="stat-card">
                        <div class="stat-icon">üë•</div>
                        <div class="stat-content">
                            <div class="stat-value">${partner.stats.totalReferrals}</div>
                            <div class="stat-label">–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">üí∞</div>
                        <div class="stat-content">
                            <div class="stat-value">$${partner.stats.totalVolume.toLocaleString()}</div>
                            <div class="stat-label">–û–±—â–∏–π –æ–±—ä—ë–º</div>
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">üíé</div>
                        <div class="stat-content">
                            <div class="stat-value">$${partner.stats.totalCommissions.toFixed(2)}</div>
                            <div class="stat-label">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ</div>
                        </div>
                    </div>
                    
                    <div class="stat-card">
                        <div class="stat-icon">üìä</div>
                        <div class="stat-content">
                            <div class="stat-value">${(partner.commission * 100).toFixed(1)}%</div>
                            <div class="stat-label">–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞</div>
                        </div>
                    </div>
                </div>

                <div class="dashboard-actions">
                    <button onclick="generatePromaterials()" class="btn btn-primary">
                        üé® –ü—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª—ã
                    </button>
                    <button onclick="openReferralStats()" class="btn btn-outline">
                        üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    </button>
                    <button onclick="requestPayout()" class="btn btn-secondary">
                        üí∏ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É
                    </button>
                    <button onclick="shareReferralLink('${partner.referralCode}')" class="btn btn-outline">
                        üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                    </button>
                </div>

                <div class="recent-activity">
                    <h3>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
                    <div class="activity-list">
                        ${this.generateRecentActivity(stats).map(activity => `
                            <div class="activity-item">
                                <div class="activity-icon">${activity.icon}</div>
                                <div class="activity-content">
                                    <div class="activity-text">${activity.text}</div>
                                    <div class="activity-time">${activity.time}</div>
                                </div>
                                <div class="activity-amount">${activity.amount}</div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            </div>
        `;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    generatePromoMaterials(partnerId) {
        const partner = this.partners[partnerId];
        if (!partner) return;

        const materials = {
            banners: [
                {
                    size: '728x90',
                    title: '–õ–∏–¥–µ—Ä–±–æ—Ä–¥ –±–∞–Ω–Ω–µ—Ä',
                    url: this.generateBannerUrl(partner.referralCode, '728x90'),
                    code: `<img src="${this.generateBannerUrl(partner.referralCode, '728x90')}" alt="–ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞ - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∫—Ä–æ–ª–∏–∫–æ–≤">`
                },
                {
                    size: '300x250',
                    title: '–°—Ä–µ–¥–Ω–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫',
                    url: this.generateBannerUrl(partner.referralCode, '300x250'),
                    code: `<img src="${this.generateBannerUrl(partner.referralCode, '300x250')}" alt="–ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞ - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∫—Ä–æ–ª–∏–∫–æ–≤">`
                }
            ],
            links: [
                {
                    type: 'main',
                    title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
                    url: `https://xn--80apagbbfxgmuj4j.site?ref=${partner.referralCode}`,
                    text: '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤ –∫—Ä–æ–ª–∏–∫–æ–≤ –∏ –ø–æ–ª—É—á–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ PLEX-–±–æ–Ω—É—Å—ã!'
                },
                {
                    type: 'catalog',
                    title: '–ö–∞—Ç–∞–ª–æ–≥ –∫—Ä–æ–ª–∏–∫–æ–≤',
                    url: `https://xn--80apagbbfxgmuj4j.site/catalog?ref=${partner.referralCode}`,
                    text: '–í—ã–±–µ—Ä–∏ —Å–≤–æ–µ–≥–æ –∫—Ä–æ–ª–∏–∫–∞ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π'
                }
            ],
            texts: [
                {
                    type: 'short',
                    title: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                    text: `üê∞ –ü–µ—Ä–≤–∞—è —Ç–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫—Ä–æ–ª–∏—á—å—è —Ñ–µ—Ä–º–∞ –≤ –†–æ—Å—Å–∏–∏! –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –æ—Ç 100 USDT, –ø–æ–ª—É—á–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ PLEX-–±–æ–Ω—É—Å—ã –∏ –¥–æ–ª—é –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –ø–æ—Ç–æ–º—Å—Ç–≤–∞. –ú–æ–π –∫–æ–¥: ${partner.referralCode}`
                },
                {
                    type: 'detailed',
                    title: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                    text: `üí∞ –ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞ - —ç—Ç–æ —Ä–µ–≤–æ–ª—é—Ü–∏—è –≤ —Å–µ–ª—å—Å–∫–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ! 

üéØ –ß—Ç–æ —ç—Ç–æ:
‚Ä¢ –¢–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫—Ä–æ–ª–∏—á—å—è —Ñ–µ—Ä–º–∞
‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –æ—Ç 100 –¥–æ 50000 USDT
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ PLEX-–±–æ–Ω—É—Å—ã 0.15-0.25%
‚Ä¢ –î–æ—Ö–æ–¥ –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –ø–æ—Ç–æ–º—Å—Ç–≤–∞ (70% –∏–Ω–≤–µ—Å—Ç–æ—Ä—É)
‚Ä¢ –ü–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ –≤–∏–¥–µ–æ-–æ—Ç—á—ë—Ç—ã

üéÅ –ü–æ –º–æ–µ–º—É –∫–æ–¥—É ${partner.referralCode} –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å 10 PLEX!

–ù–∞—á–Ω–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å: https://xn--80apagbbfxgmuj4j.site?ref=${partner.referralCode}`
                }
            ]
        };

        return materials;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–ø–ª–∞—Ç
    async processAutoPayout(partnerId) {
        const partner = this.partners[partnerId];
        if (!partner) return;

        const payoutAmount = partner.stats.totalCommissions;
        
        // –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –æ –≤—ã–ø–ª–∞—Ç–µ
        const payout = {
            id: this.generatePayoutId(),
            partnerId: partnerId,
            amount: payoutAmount,
            method: partner.settings.payoutMethod,
            address: partner.settings.payoutAddress,
            status: 'processing',
            createdAt: new Date().toISOString(),
            processedAt: null
        };

        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API-–≤—ã–∑–æ–≤ –∫ –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
        console.log('Processing payout:', payout);

        // –û–±–Ω—É–ª—è–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏
        partner.stats.totalCommissions = 0;

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≤—ã–ø–ª–∞—Ç–µ
        await this.notifyPayoutProcessed(partnerId, payout);

        return payout;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞
    async checkRequirements(userId, requirements) {
        const userStats = await this.getUserStats(userId);
        const missing = [];

        if (requirements.referrals && userStats.referrals < requirements.referrals) {
            missing.push(`–ù—É–∂–Ω–æ ${requirements.referrals} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–µ—Å—Ç—å ${userStats.referrals})`);
        }

        if (requirements.followers && userStats.followers < requirements.followers) {
            missing.push(`–ù—É–∂–Ω–æ ${requirements.followers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (–µ—Å—Ç—å ${userStats.followers})`);
        }

        if (requirements.monthlyVolume && userStats.monthlyVolume < requirements.monthlyVolume) {
            missing.push(`–ù—É–∂–µ–Ω –º–µ—Å—è—á–Ω—ã–π –æ–±–æ—Ä–æ—Ç ${requirements.monthlyVolume} USDT`);
        }

        return {
            success: missing.length === 0,
            missing: missing
        };
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    createDemoPartner(userId) {
        return {
            id: userId,
            type: 'influencer',
            status: 'active',
            registrationDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
            referralCode: 'DEMO123',
            commission: 0.08,
            bonusCommission: 0.03,
            tier: 'silver',
            stats: {
                totalReferrals: 15,
                activeReferrals: 12,
                totalVolume: 45000,
                totalCommissions: 3600,
                monthlyVolume: 15000,
                monthlyCommissions: 1200
            }
        };
    }

    createStatsStructure() {
        return {
            commissions: [],
            referrals: [],
            payouts: []
        };
    }

    generateRecentActivity(stats) {
        return [
            {
                icon: 'üí∞',
                text: '–ù–æ–≤–∞—è –∫–æ–º–∏—Å—Å–∏—è —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞',
                time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
                amount: '+$125.50'
            },
            {
                icon: 'üë§',
                text: '–ù–æ–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª',
                time: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
                amount: '+1 —Ä–µ—Ñ–µ—Ä–∞–ª'
            },
            {
                icon: 'üíé',
                text: '–ü–æ–≤—ã—à–µ–Ω–∏–µ –¥–æ Silver tier',
                time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
                amount: '+20% –∫ —Å—Ç–∞–≤–∫–µ'
            }
        ];
    }

    generateBannerUrl(referralCode, size) {
        return `/images/banners/partner-${size}-${referralCode}.png`;
    }

    generateCommissionId() {
        return 'COMM_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
    }

    generatePayoutId() {
        return 'PAYOUT_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
    }

    async getUserStats(userId) {
        return {
            referrals: 0,
            followers: 0,
            monthlyVolume: 0
        };
    }

    async notifyPartnerRegistration(partner) {
        console.log('Partner registered:', partner);
    }

    async notifyNewReferral(partnerId, referral, amount) {
        console.log(`New referral for partner ${partnerId}:`, referral);
    }

    async notifyCommissionCredited(partnerId, commission, type) {
        console.log(`Commission credited to partner ${partnerId}:`, commission);
    }

    async notifyPayoutProcessed(partnerId, payout) {
        console.log(`Payout processed for partner ${partnerId}:`, payout);
    }

    loadPartnerData() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤
        console.log('Loading partner data...');
    }

    initializeTracking() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        console.log('Partner tracking initialized');
    }

    startCommissionCalculation() {
        // –ó–∞–ø—É—Å–∫ —Ä–∞—Å—á—ë—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π
        setInterval(() => {
            this.calculateMonthlyCommissions();
        }, 24 * 60 * 60 * 1000); // —Ä–∞–∑ –≤ –¥–µ–Ω—å
    }

    calculateMonthlyCommissions() {
        // –†–∞—Å—á—ë—Ç –º–µ—Å—è—á–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π
        console.log('Calculating monthly commissions...');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
window.copyReferralCode = (code) => {
    navigator.clipboard.writeText(code);
    alert('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
};

window.generatePromaterials = () => {
    console.log('Opening promo materials generator...');
};

window.openReferralStats = () => {
    console.log('Opening referral statistics...');
};

window.requestPayout = () => {
    console.log('Opening payout request form...');
};

window.shareReferralLink = (code) => {
    const url = `https://xn--80apagbbfxgmuj4j.site?ref=${code}`;
    if (navigator.share) {
        navigator.share({
            title: '–ö—É–ø–∏—Ç—å–ö—Ä–æ–ª–∏–∫–∞ - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∫—Ä–æ–ª–∏–∫–æ–≤',
            text: '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤ —Ç–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ñ–µ—Ä–º—É –∏ –ø–æ–ª—É—á–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ PLEX-–±–æ–Ω—É—Å—ã!',
            url: url
        });
    } else {
        navigator.clipboard.writeText(url);
        alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
window.partnershipProgram = new PartnershipProgram();

console.log('ü§ù Partnership program loaded');