---
import BaseLayout from '../layouts/BaseLayout.astro';
import PersonalRabbitCard from '../components/PersonalRabbitCard.astro';

// Загружаем данные кроликов (в реальности это будет из API)
const rabbitsData = [
    {
        name: "Белоснежка",
        gender: "female",
        breed: "Калифорнийский",
        status: "feeding",
        price: 15000,
        owner: "Инвестор #1247",
        offspring: 3
    },
    {
        name: "Граф",
        gender: "male", 
        breed: "Калифорнийский",
        status: "breeding",
        price: 18000,
        owner: "Инвестор #1105",
        offspring: 8
    },
    {
        name: "Пушистик",
        gender: "male",
        breed: "Белый великан", 
        status: "resting",
        price: 16000,
        owner: "Доступен для покупки",
        offspring: 0
    }
];
---

<BaseLayout title="Каталог кроликов  DEXRabbit"
           description="Каталог всех кроликов на ферме DEXRabbit: породы, цены, статусы, фильтры по полу и породе, персональные карточки животных">
    
    <section class="section section-primary">
        <div class="container">
            <div class="section-header section-header-white">
                <h1 class="section-title">Каталог кроликов</h1>
                <p class="section-description">
                    Все наши кролики с подробной информацией
                </p>
            </div>
        </div>
    </section>

    <section class="section">
        <div class="container">
            <div class="catalog-filters">
                <h2> Фильтры</h2>
                <div class="filters-grid">
                    <div class="filter-group">
                        <label for="breed-filter">Порода</label>
                        <select id="breed-filter">
                            <option value="all">Все породы</option>
                            <option value="california">Калифорнийский</option>
                            <option value="white-giant">Белый великан</option>
                            <option value="gray-giant">Серый великан</option>
                            <option value="angora">Ангорский</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label>Пол</label>
                        <div class="radio-group">
                            <label class="radio-label">
                                <input type="radio" name="gender" value="all" checked>
                                <span>Все</span>
                            </label>
                            <label class="radio-label">
                                <input type="radio" name="gender" value="male">
                                <span> Самцы</span>
                            </label>
                            <label class="radio-label">
                                <input type="radio" name="gender" value="female">
                                <span> Самки</span>
                            </label>
                        </div>
                    </div>
                    
                    <div class="filter-group">
                        <label for="status-filter">Статус</label>
                        <select id="status-filter">
                            <option value="all">Все статусы</option>
                            <option value="available">Доступен</option>
                            <option value="feeding">Кормление</option>
                            <option value="breeding">Размножение</option>
                            <option value="resting">Отдых</option>
                            <option value="observation">Наблюдение</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="sort-filter">Сортировка</label>
                        <select id="sort-filter">
                            <option value="default">По умолчанию</option>
                            <option value="price-low">Цена: по возрастанию</option>
                            <option value="price-high">Цена: по убыванию</option>
                            <option value="name">По имени</option>
                            <option value="offspring">По количеству потомства</option>
                        </select>
                    </div>
                </div>
                
                <button id="clear-filters" class="btn btn-outline">
                     Очистить фильтры
                </button>
            </div>
        </div>
    </section>

    <section class="section section-gray">
        <div class="container">
            <div class="catalog-results">
                <div class="results-header">
                    <h2 id="results-title">Найдено кроликов: <span id="results-count">0</span></h2>
                </div>
                
                <div id="rabbits-grid" class="rabbits-grid">
                    {rabbitsData.map(rabbit => (
                        <PersonalRabbitCard 
                            name={rabbit.name}
                            gender={rabbit.gender}
                            breed={rabbit.breed}
                            status={rabbit.status}
                            price={rabbit.price}
                            owner={rabbit.owner}
                            offspring={rabbit.offspring}
                        />
                    ))}
                </div>
                
                <div id="no-results" class="no-results" style="display:none;">
                    <div class="no-results-icon"></div>
                    <h3>Кроликов не найдено</h3>
                    <p>Попробуйте изменить фильтры поиска</p>
                </div>
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class="section">
        <div class="container">
            <div class="catalog-cta">
                <h2> Заинтересовались?</h2>
                <p>Свяжитесь с нами для покупки кролика или инвестиций в ферму</p>
                <div class="cta-buttons">
                    <a href="/investment-model" class="btn btn-primary">
                         Инвестировать
                    </a>
                    <a href="/contacts" class="btn btn-outline">
                         Связаться
                    </a>
                </div>
            </div>
        </div>
    </section>

</BaseLayout>

<style>
.catalog-filters {
    margin-bottom: 2rem;
}

.filters-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin: 1.5rem 0;
}

.filter-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

.filter-group select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 1rem;
}

.radio-group {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.radio-label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
}

.radio-label input[type="radio"] {
    margin: 0;
}

.rabbits-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
}

.no-results {
    text-align: center;
    padding: 3rem;
}

.no-results-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
}

.results-header {
    margin-bottom: 2rem;
}

.catalog-cta {
    text-align: center;
    padding: 3rem;
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
}

.cta-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 1.5rem;
}

@media (max-width: 768px) {
    .filters-grid {
        grid-template-columns: 1fr;
    }
    
    .rabbits-grid {
        grid-template-columns: 1fr;
    }
    
    .cta-buttons {
        flex-direction: column;
        align-items: center;
    }
}
</style>

<script>
class CatalogFilter {
    constructor() {
        this.rabbitsData = [
            {
                name: "Белоснежка",
                gender: "female",
                breed: "california",
                status: "feeding",
                price: 15000,
                owner: "Инвестор #1247",
                offspring: 3
            },
            {
                name: "Граф",
                gender: "male", 
                breed: "california",
                status: "breeding",
                price: 18000,
                owner: "Инвестор #1105",
                offspring: 8
            },
            {
                name: "Пушистик",
                gender: "male",
                breed: "white-giant",
                status: "resting",
                price: 16000,
                owner: "Доступен для покупки",
                offspring: 0
            }
        ];
        
        this.filteredRabbits = [...this.rabbitsData];
        this.init();
    }
    
    init() {
        this.setupFilters();
        this.updateResults();
    }
    
    setupFilters() {
        // Фильтр породы
        document.getElementById('breed-filter').addEventListener('change', () => {
            this.applyFilters();
        });
        
        // Фильтр пола
        document.querySelectorAll('input[name="gender"]').forEach(radio => {
            radio.addEventListener('change', () => {
                this.applyFilters();
            });
        });
        
        // Фильтр статуса
        document.getElementById('status-filter').addEventListener('change', () => {
            this.applyFilters();
        });
        
        // Сортировка
        document.getElementById('sort-filter').addEventListener('change', () => {
            this.applySorting();
            this.updateResults();
        });
        
        // Очистка фильтров
        document.getElementById('clear-filters').addEventListener('click', () => {
            this.clearFilters();
        });
    }
    
    applyFilters() {
        const breedFilter = document.getElementById('breed-filter').value;
        const genderFilter = document.querySelector('input[name="gender"]:checked').value;
        const statusFilter = document.getElementById('status-filter').value;
        
        this.filteredRabbits = this.rabbitsData.filter(rabbit => {
            const breedMatch = breedFilter === 'all' || rabbit.breed === breedFilter;
            const genderMatch = genderFilter === 'all' || rabbit.gender === genderFilter;
            const statusMatch = statusFilter === 'all' || rabbit.status === statusFilter;
            
            return breedMatch && genderMatch && statusMatch;
        });
        
        this.applySorting();
        this.updateResults();
        
        // Аналитика
        if (window.analytics && typeof window.analytics.trackEvent === 'function') {
            window.analytics.trackEvent('catalog_filtered', {
                breed: breedFilter,
                gender: genderFilter,
                status: statusFilter,
                results: this.filteredRabbits.length
            });
        }
    }
    
    applySorting() {
        const sortBy = document.getElementById('sort-filter').value;
        
        switch (sortBy) {
            case 'price-low':
                this.filteredRabbits.sort((a, b) => a.price - b.price);
                break;
            case 'price-high':
                this.filteredRabbits.sort((a, b) => b.price - a.price);
                break;
            case 'name':
                this.filteredRabbits.sort((a, b) => a.name.localeCompare(b.name));
                break;
            case 'offspring':
                this.filteredRabbits.sort((a, b) => b.offspring - a.offspring);
                break;
            default:
                // Возвращаем к исходному порядку
                this.filteredRabbits.sort((a, b) => 
                    this.rabbitsData.indexOf(a) - this.rabbitsData.indexOf(b)
                );
        }
    }
    
    updateResults() {
        const resultsCount = document.getElementById('results-count');
        const rabbitsGrid = document.getElementById('rabbits-grid');
        const noResults = document.getElementById('no-results');
        
        resultsCount.textContent = this.filteredRabbits.length;
        
        if (this.filteredRabbits.length === 0) {
            rabbitsGrid.style.display = 'none';
            noResults.style.display = 'block';
        } else {
            rabbitsGrid.style.display = 'grid';
            noResults.style.display = 'none';
            
            // В реальности здесь будет рендер карточек
            // Сейчас просто обновляем счётчик
        }
    }
    
    clearFilters() {
        document.getElementById('breed-filter').value = 'all';
        document.getElementById('status-filter').value = 'all';
        document.getElementById('sort-filter').value = 'default';
        document.querySelector('input[name="gender"][value="all"]').checked = true;
        
        this.filteredRabbits = [...this.rabbitsData];
        this.updateResults();
        
        // Аналитика
        if (window.analytics && typeof window.analytics.trackEvent === 'function') {
            window.analytics.trackEvent('catalog_filters_cleared', {
                timestamp: Date.now()
            });
        }
    }
}

// Инициализация каталога
document.addEventListener('DOMContentLoaded', () => {
    new CatalogFilter();
});

// Аналитика просмотра каталога
if (window.analytics && typeof window.analytics.trackEvent === 'function') {
    window.analytics.trackEvent('catalog_page_view', {
        total_rabbits: 3,
        timestamp: Date.now()
    });
}
</script>
