name: QA Suite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Build site
        run: npm run build

      - name: Start preview server
        run: npm run preview &
        env:
          PORT: 4322

      - name: Wait for server
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:4322/ > /dev/null 2>&1; do sleep 1; done'

      - name: Run E2E tests
        run: npm run test:e2e
        continue-on-error: true

      - name: Run accessibility tests
        run: npm run test:a11y
        continue-on-error: true

      - name: Run performance tests
        run: npm run test:perf
        continue-on-error: true

      - name: Run content tests
        run: npm run test:content
        continue-on-error: true

      - name: Run asset tests
        run: npm run test:assets
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
            lighthouseci-report/
          retention-days: 7

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('test-results/results.json', 'utf8'));

            const passed = results.suites.reduce((acc, suite) => acc + suite.tests.filter(t => t.results[0].status === 'passed').length, 0);
            const failed = results.suites.reduce((acc, suite) => acc + suite.tests.filter(t => t.results[0].status === 'failed').length, 0);
            const total = passed + failed;

            const body = `
            ## 🧪 QA Results
            - ✅ **${passed}/${total}** tests passed
            - ❌ **${failed}/${total}** tests failed

            ### Test Categories:
            - **E2E**: Navigation, UI interactions, content validation
            - **A11y**: Accessibility compliance (axe-core)
            - **Perf**: Performance budgets (Lighthouse CI)
            - **Content**: Economic model consistency
            - **Assets**: File presence and integrity

            [📊 View detailed report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });